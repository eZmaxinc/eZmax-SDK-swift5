//
// ObjectEzdoctemplatedocumentAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ObjectEzdoctemplatedocumentAPI {

    /**
     Create a new Ezdoctemplatedocument
     
     - parameter ezdoctemplatedocumentCreateObjectV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ezdoctemplatedocumentCreateObjectV1(ezdoctemplatedocumentCreateObjectV1Request: EzdoctemplatedocumentCreateObjectV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EzdoctemplatedocumentCreateObjectV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return ezdoctemplatedocumentCreateObjectV1WithRequestBuilder(ezdoctemplatedocumentCreateObjectV1Request: ezdoctemplatedocumentCreateObjectV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create a new Ezdoctemplatedocument
     - POST /1/object/ezdoctemplatedocument
     - The endpoint allows to create one or many elements at once.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter ezdoctemplatedocumentCreateObjectV1Request: (body)  
     - returns: RequestBuilder<EzdoctemplatedocumentCreateObjectV1Response> 
     */
    open class func ezdoctemplatedocumentCreateObjectV1WithRequestBuilder(ezdoctemplatedocumentCreateObjectV1Request: EzdoctemplatedocumentCreateObjectV1Request) -> RequestBuilder<EzdoctemplatedocumentCreateObjectV1Response> {
        let localVariablePath = "/1/object/ezdoctemplatedocument"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: ezdoctemplatedocumentCreateObjectV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EzdoctemplatedocumentCreateObjectV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Retrieve the content
     
     - parameter pkiEzdoctemplatedocumentID: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ezdoctemplatedocumentDownloadV1(pkiEzdoctemplatedocumentID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?, _ error: Error?) -> Void)) -> RequestTask {
        return ezdoctemplatedocumentDownloadV1WithRequestBuilder(pkiEzdoctemplatedocumentID: pkiEzdoctemplatedocumentID).execute(apiResponseQueue) { result in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve the content
     - GET /1/object/ezdoctemplatedocument/{pkiEzdoctemplatedocumentID}/download
     - Using this endpoint, you can retrieve the content of an ezdoctemplatedocument.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - API Key:
       - type: apiKey sAuthorization (QUERY)
       - name: Presigned
     - parameter pkiEzdoctemplatedocumentID: (path)  
     - returns: RequestBuilder<Void> 
     */
    open class func ezdoctemplatedocumentDownloadV1WithRequestBuilder(pkiEzdoctemplatedocumentID: Int) -> RequestBuilder<Void> {
        var localVariablePath = "/1/object/ezdoctemplatedocument/{pkiEzdoctemplatedocumentID}/download"
        let pkiEzdoctemplatedocumentIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiEzdoctemplatedocumentID))"
        let pkiEzdoctemplatedocumentIDPostEscape = pkiEzdoctemplatedocumentIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiEzdoctemplatedocumentID}", with: pkiEzdoctemplatedocumentIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Edit an existing Ezdoctemplatedocument
     
     - parameter pkiEzdoctemplatedocumentID: (path) The unique ID of the Ezdoctemplatedocument 
     - parameter ezdoctemplatedocumentEditObjectV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ezdoctemplatedocumentEditObjectV1(pkiEzdoctemplatedocumentID: Int, ezdoctemplatedocumentEditObjectV1Request: EzdoctemplatedocumentEditObjectV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EzdoctemplatedocumentEditObjectV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return ezdoctemplatedocumentEditObjectV1WithRequestBuilder(pkiEzdoctemplatedocumentID: pkiEzdoctemplatedocumentID, ezdoctemplatedocumentEditObjectV1Request: ezdoctemplatedocumentEditObjectV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Edit an existing Ezdoctemplatedocument
     - PUT /1/object/ezdoctemplatedocument/{pkiEzdoctemplatedocumentID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiEzdoctemplatedocumentID: (path) The unique ID of the Ezdoctemplatedocument 
     - parameter ezdoctemplatedocumentEditObjectV1Request: (body)  
     - returns: RequestBuilder<EzdoctemplatedocumentEditObjectV1Response> 
     */
    open class func ezdoctemplatedocumentEditObjectV1WithRequestBuilder(pkiEzdoctemplatedocumentID: Int, ezdoctemplatedocumentEditObjectV1Request: EzdoctemplatedocumentEditObjectV1Request) -> RequestBuilder<EzdoctemplatedocumentEditObjectV1Response> {
        var localVariablePath = "/1/object/ezdoctemplatedocument/{pkiEzdoctemplatedocumentID}"
        let pkiEzdoctemplatedocumentIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiEzdoctemplatedocumentID))"
        let pkiEzdoctemplatedocumentIDPostEscape = pkiEzdoctemplatedocumentIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiEzdoctemplatedocumentID}", with: pkiEzdoctemplatedocumentIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: ezdoctemplatedocumentEditObjectV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EzdoctemplatedocumentEditObjectV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter sSelector
     */
    public enum SSelector_ezdoctemplatedocumentGetAutocompleteV2: String, CaseIterable {
        case all = "All"
        case ezsignfolder = "Ezsignfolder"
        case ezsignfoldersignerassociations = "Ezsignfoldersignerassociations"
    }

    /**
     * enum for parameter eType
     */
    public enum EType_ezdoctemplatedocumentGetAutocompleteV2: String, CaseIterable {
        case user = "User"
        case company = "Company"
        case ezsignfoldertype = "Ezsignfoldertype"
        case companyUser = "CompanyUser"
        case companyEzsignfoldertype = "CompanyEzsignfoldertype"
    }

    /**
     * enum for parameter eFilterActive
     */
    public enum EFilterActive_ezdoctemplatedocumentGetAutocompleteV2: String, CaseIterable {
        case all = "All"
        case active = "Active"
        case inactive = "Inactive"
    }

    /**
     Retrieve Ezdoctemplatedocuments and IDs
     
     - parameter sSelector: (path) The type of Ezdoctemplatedocuments to return 
     - parameter eType: (query) The type of Ezdoctemplatedocument 
     - parameter fkiEzsignfoldertypeID: (query) Specify which fkiEzsignfoldertypeID we want to display. only used when eType &#x3D; Ezsignfoldertype (optional)
     - parameter eFilterActive: (query) Specify which results we want to display. (optional, default to .active)
     - parameter sQuery: (query) Allow to filter the returned results (optional)
     - parameter acceptLanguage: (header)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ezdoctemplatedocumentGetAutocompleteV2(sSelector: SSelector_ezdoctemplatedocumentGetAutocompleteV2, eType: EType_ezdoctemplatedocumentGetAutocompleteV2, fkiEzsignfoldertypeID: String? = nil, eFilterActive: EFilterActive_ezdoctemplatedocumentGetAutocompleteV2? = nil, sQuery: String? = nil, acceptLanguage: HeaderAcceptLanguage? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EzdoctemplatedocumentGetAutocompleteV2Response?, _ error: Error?) -> Void)) -> RequestTask {
        return ezdoctemplatedocumentGetAutocompleteV2WithRequestBuilder(sSelector: sSelector, eType: eType, fkiEzsignfoldertypeID: fkiEzsignfoldertypeID, eFilterActive: eFilterActive, sQuery: sQuery, acceptLanguage: acceptLanguage).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve Ezdoctemplatedocuments and IDs
     - GET /2/object/ezdoctemplatedocument/getAutocomplete/{sSelector}
     - Get the list of Ezdoctemplatedocument to be used in a dropdown or autocomplete control.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter sSelector: (path) The type of Ezdoctemplatedocuments to return 
     - parameter eType: (query) The type of Ezdoctemplatedocument 
     - parameter fkiEzsignfoldertypeID: (query) Specify which fkiEzsignfoldertypeID we want to display. only used when eType &#x3D; Ezsignfoldertype (optional)
     - parameter eFilterActive: (query) Specify which results we want to display. (optional, default to .active)
     - parameter sQuery: (query) Allow to filter the returned results (optional)
     - parameter acceptLanguage: (header)  (optional)
     - returns: RequestBuilder<EzdoctemplatedocumentGetAutocompleteV2Response> 
     */
    open class func ezdoctemplatedocumentGetAutocompleteV2WithRequestBuilder(sSelector: SSelector_ezdoctemplatedocumentGetAutocompleteV2, eType: EType_ezdoctemplatedocumentGetAutocompleteV2, fkiEzsignfoldertypeID: String? = nil, eFilterActive: EFilterActive_ezdoctemplatedocumentGetAutocompleteV2? = nil, sQuery: String? = nil, acceptLanguage: HeaderAcceptLanguage? = nil) -> RequestBuilder<EzdoctemplatedocumentGetAutocompleteV2Response> {
        var localVariablePath = "/2/object/ezdoctemplatedocument/getAutocomplete/{sSelector}"
        let sSelectorPreEscape = "\(sSelector.rawValue)"
        let sSelectorPostEscape = sSelectorPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{sSelector}", with: sSelectorPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fkiEzsignfoldertypeID": (wrappedValue: fkiEzsignfoldertypeID?.encodeToJSON(), isExplode: true),
            "eType": (wrappedValue: eType.encodeToJSON(), isExplode: true),
            "eFilterActive": (wrappedValue: eFilterActive?.encodeToJSON(), isExplode: true),
            "sQuery": (wrappedValue: sQuery?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Accept-Language": acceptLanguage?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EzdoctemplatedocumentGetAutocompleteV2Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter eOrderBy
     */
    public enum EOrderBy_ezdoctemplatedocumentGetListV1: String, CaseIterable {
        case pkiezdoctemplatedocumentidAsc = "pkiEzdoctemplatedocumentID_ASC"
        case pkiezdoctemplatedocumentidDesc = "pkiEzdoctemplatedocumentID_DESC"
        case fkilanguageidAsc = "fkiLanguageID_ASC"
        case fkilanguageidDesc = "fkiLanguageID_DESC"
        case fkiezdoctemplatetypeidAsc = "fkiEzdoctemplatetypeID_ASC"
        case fkiezdoctemplatetypeidDesc = "fkiEzdoctemplatetypeID_DESC"
        case fkiezdoctemplatefieldtypecategoryidAsc = "fkiEzdoctemplatefieldtypecategoryID_ASC"
        case fkiezdoctemplatefieldtypecategoryidDesc = "fkiEzdoctemplatefieldtypecategoryID_DESC"
        case bezdoctemplatedocumentisactiveAsc = "bEzdoctemplatedocumentIsactive_ASC"
        case bezdoctemplatedocumentisactiveDesc = "bEzdoctemplatedocumentIsactive_DESC"
        case sezdoctemplatedocumentnamexAsc = "sEzdoctemplatedocumentNameX_ASC"
        case sezdoctemplatedocumentnamexDesc = "sEzdoctemplatedocumentNameX_DESC"
    }

    /**
     Retrieve Ezdoctemplatedocument list
     
     - parameter eOrderBy: (query) Specify how you want the results to be sorted (optional)
     - parameter iRowMax: (query)  (optional)
     - parameter iRowOffset: (query)  (optional, default to 0)
     - parameter acceptLanguage: (header)  (optional)
     - parameter sFilter: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ezdoctemplatedocumentGetListV1(eOrderBy: EOrderBy_ezdoctemplatedocumentGetListV1? = nil, iRowMax: Int? = nil, iRowOffset: Int? = nil, acceptLanguage: HeaderAcceptLanguage? = nil, sFilter: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EzdoctemplatedocumentGetListV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return ezdoctemplatedocumentGetListV1WithRequestBuilder(eOrderBy: eOrderBy, iRowMax: iRowMax, iRowOffset: iRowOffset, acceptLanguage: acceptLanguage, sFilter: sFilter).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve Ezdoctemplatedocument list
     - GET /1/object/ezdoctemplatedocument/getList
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter eOrderBy: (query) Specify how you want the results to be sorted (optional)
     - parameter iRowMax: (query)  (optional)
     - parameter iRowOffset: (query)  (optional, default to 0)
     - parameter acceptLanguage: (header)  (optional)
     - parameter sFilter: (query)  (optional)
     - returns: RequestBuilder<EzdoctemplatedocumentGetListV1Response> 
     */
    open class func ezdoctemplatedocumentGetListV1WithRequestBuilder(eOrderBy: EOrderBy_ezdoctemplatedocumentGetListV1? = nil, iRowMax: Int? = nil, iRowOffset: Int? = nil, acceptLanguage: HeaderAcceptLanguage? = nil, sFilter: String? = nil) -> RequestBuilder<EzdoctemplatedocumentGetListV1Response> {
        let localVariablePath = "/1/object/ezdoctemplatedocument/getList"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "eOrderBy": (wrappedValue: eOrderBy?.encodeToJSON(), isExplode: true),
            "iRowMax": (wrappedValue: iRowMax?.encodeToJSON(), isExplode: true),
            "iRowOffset": (wrappedValue: iRowOffset?.encodeToJSON(), isExplode: true),
            "sFilter": (wrappedValue: sFilter?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Accept-Language": acceptLanguage?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EzdoctemplatedocumentGetListV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Retrieve an existing Ezdoctemplatedocument
     
     - parameter pkiEzdoctemplatedocumentID: (path) The unique ID of the Ezdoctemplatedocument 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ezdoctemplatedocumentGetObjectV2(pkiEzdoctemplatedocumentID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EzdoctemplatedocumentGetObjectV2Response?, _ error: Error?) -> Void)) -> RequestTask {
        return ezdoctemplatedocumentGetObjectV2WithRequestBuilder(pkiEzdoctemplatedocumentID: pkiEzdoctemplatedocumentID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve an existing Ezdoctemplatedocument
     - GET /2/object/ezdoctemplatedocument/{pkiEzdoctemplatedocumentID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiEzdoctemplatedocumentID: (path) The unique ID of the Ezdoctemplatedocument 
     - returns: RequestBuilder<EzdoctemplatedocumentGetObjectV2Response> 
     */
    open class func ezdoctemplatedocumentGetObjectV2WithRequestBuilder(pkiEzdoctemplatedocumentID: Int) -> RequestBuilder<EzdoctemplatedocumentGetObjectV2Response> {
        var localVariablePath = "/2/object/ezdoctemplatedocument/{pkiEzdoctemplatedocumentID}"
        let pkiEzdoctemplatedocumentIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiEzdoctemplatedocumentID))"
        let pkiEzdoctemplatedocumentIDPostEscape = pkiEzdoctemplatedocumentIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiEzdoctemplatedocumentID}", with: pkiEzdoctemplatedocumentIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EzdoctemplatedocumentGetObjectV2Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Patch an existing Ezdoctemplatedocument
     
     - parameter pkiEzdoctemplatedocumentID: (path) The unique ID of the Ezdoctemplatedocument 
     - parameter ezdoctemplatedocumentPatchObjectV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ezdoctemplatedocumentPatchObjectV1(pkiEzdoctemplatedocumentID: Int, ezdoctemplatedocumentPatchObjectV1Request: EzdoctemplatedocumentPatchObjectV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EzdoctemplatedocumentPatchObjectV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return ezdoctemplatedocumentPatchObjectV1WithRequestBuilder(pkiEzdoctemplatedocumentID: pkiEzdoctemplatedocumentID, ezdoctemplatedocumentPatchObjectV1Request: ezdoctemplatedocumentPatchObjectV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Patch an existing Ezdoctemplatedocument
     - PATCH /1/object/ezdoctemplatedocument/{pkiEzdoctemplatedocumentID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiEzdoctemplatedocumentID: (path) The unique ID of the Ezdoctemplatedocument 
     - parameter ezdoctemplatedocumentPatchObjectV1Request: (body)  
     - returns: RequestBuilder<EzdoctemplatedocumentPatchObjectV1Response> 
     */
    open class func ezdoctemplatedocumentPatchObjectV1WithRequestBuilder(pkiEzdoctemplatedocumentID: Int, ezdoctemplatedocumentPatchObjectV1Request: EzdoctemplatedocumentPatchObjectV1Request) -> RequestBuilder<EzdoctemplatedocumentPatchObjectV1Response> {
        var localVariablePath = "/1/object/ezdoctemplatedocument/{pkiEzdoctemplatedocumentID}"
        let pkiEzdoctemplatedocumentIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiEzdoctemplatedocumentID))"
        let pkiEzdoctemplatedocumentIDPostEscape = pkiEzdoctemplatedocumentIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiEzdoctemplatedocumentID}", with: pkiEzdoctemplatedocumentIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: ezdoctemplatedocumentPatchObjectV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EzdoctemplatedocumentPatchObjectV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
