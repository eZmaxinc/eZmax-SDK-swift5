//
// ObjectCreditcardclientAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ObjectCreditcardclientAPI {

    /**
     Create a new Creditcardclient
     
     - parameter creditcardclientCreateObjectV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func creditcardclientCreateObjectV1(creditcardclientCreateObjectV1Request: CreditcardclientCreateObjectV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CreditcardclientCreateObjectV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return creditcardclientCreateObjectV1WithRequestBuilder(creditcardclientCreateObjectV1Request: creditcardclientCreateObjectV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create a new Creditcardclient
     - POST /1/object/creditcardclient
     - The endpoint allows to create one or many elements at once.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter creditcardclientCreateObjectV1Request: (body)  
     - returns: RequestBuilder<CreditcardclientCreateObjectV1Response> 
     */
    open class func creditcardclientCreateObjectV1WithRequestBuilder(creditcardclientCreateObjectV1Request: CreditcardclientCreateObjectV1Request) -> RequestBuilder<CreditcardclientCreateObjectV1Response> {
        let localVariablePath = "/1/object/creditcardclient"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: creditcardclientCreateObjectV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreditcardclientCreateObjectV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete an existing Creditcardclient
     
     - parameter pkiCreditcardclientID: (path) The unique ID of the Creditcardclient 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func creditcardclientDeleteObjectV1(pkiCreditcardclientID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CommonResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return creditcardclientDeleteObjectV1WithRequestBuilder(pkiCreditcardclientID: pkiCreditcardclientID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete an existing Creditcardclient
     - DELETE /1/object/creditcardclient/{pkiCreditcardclientID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiCreditcardclientID: (path) The unique ID of the Creditcardclient 
     - returns: RequestBuilder<CommonResponse> 
     */
    open class func creditcardclientDeleteObjectV1WithRequestBuilder(pkiCreditcardclientID: Int) -> RequestBuilder<CommonResponse> {
        var localVariablePath = "/1/object/creditcardclient/{pkiCreditcardclientID}"
        let pkiCreditcardclientIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiCreditcardclientID))"
        let pkiCreditcardclientIDPostEscape = pkiCreditcardclientIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiCreditcardclientID}", with: pkiCreditcardclientIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CommonResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Edit an existing Creditcardclient
     
     - parameter pkiCreditcardclientID: (path) The unique ID of the Creditcardclient 
     - parameter creditcardclientEditObjectV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func creditcardclientEditObjectV1(pkiCreditcardclientID: Int, creditcardclientEditObjectV1Request: CreditcardclientEditObjectV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CommonResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return creditcardclientEditObjectV1WithRequestBuilder(pkiCreditcardclientID: pkiCreditcardclientID, creditcardclientEditObjectV1Request: creditcardclientEditObjectV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Edit an existing Creditcardclient
     - PUT /1/object/creditcardclient/{pkiCreditcardclientID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiCreditcardclientID: (path) The unique ID of the Creditcardclient 
     - parameter creditcardclientEditObjectV1Request: (body)  
     - returns: RequestBuilder<CommonResponse> 
     */
    open class func creditcardclientEditObjectV1WithRequestBuilder(pkiCreditcardclientID: Int, creditcardclientEditObjectV1Request: CreditcardclientEditObjectV1Request) -> RequestBuilder<CommonResponse> {
        var localVariablePath = "/1/object/creditcardclient/{pkiCreditcardclientID}"
        let pkiCreditcardclientIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiCreditcardclientID))"
        let pkiCreditcardclientIDPostEscape = pkiCreditcardclientIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiCreditcardclientID}", with: pkiCreditcardclientIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: creditcardclientEditObjectV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CommonResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter sSelector
     */
    public enum SSelector_creditcardclientGetAutocompleteV2: String, CaseIterable {
        case all = "All"
    }

    /**
     * enum for parameter eFilterActive
     */
    public enum EFilterActive_creditcardclientGetAutocompleteV2: String, CaseIterable {
        case all = "All"
        case active = "Active"
        case inactive = "Inactive"
    }

    /**
     Retrieve Creditcardclients and IDs
     
     - parameter sSelector: (path) The type of Creditcardclients to return 
     - parameter eFilterActive: (query) Specify which results we want to display. (optional, default to .active)
     - parameter sQuery: (query) Allow to filter the returned results (optional)
     - parameter acceptLanguage: (header)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func creditcardclientGetAutocompleteV2(sSelector: SSelector_creditcardclientGetAutocompleteV2, eFilterActive: EFilterActive_creditcardclientGetAutocompleteV2? = nil, sQuery: String? = nil, acceptLanguage: HeaderAcceptLanguage? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CreditcardclientGetAutocompleteV2Response?, _ error: Error?) -> Void)) -> RequestTask {
        return creditcardclientGetAutocompleteV2WithRequestBuilder(sSelector: sSelector, eFilterActive: eFilterActive, sQuery: sQuery, acceptLanguage: acceptLanguage).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve Creditcardclients and IDs
     - GET /2/object/creditcardclient/getAutocomplete/{sSelector}
     - Get the list of Creditcardclient to be used in a dropdown or autocomplete control.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter sSelector: (path) The type of Creditcardclients to return 
     - parameter eFilterActive: (query) Specify which results we want to display. (optional, default to .active)
     - parameter sQuery: (query) Allow to filter the returned results (optional)
     - parameter acceptLanguage: (header)  (optional)
     - returns: RequestBuilder<CreditcardclientGetAutocompleteV2Response> 
     */
    open class func creditcardclientGetAutocompleteV2WithRequestBuilder(sSelector: SSelector_creditcardclientGetAutocompleteV2, eFilterActive: EFilterActive_creditcardclientGetAutocompleteV2? = nil, sQuery: String? = nil, acceptLanguage: HeaderAcceptLanguage? = nil) -> RequestBuilder<CreditcardclientGetAutocompleteV2Response> {
        var localVariablePath = "/2/object/creditcardclient/getAutocomplete/{sSelector}"
        let sSelectorPreEscape = "\(sSelector.rawValue)"
        let sSelectorPostEscape = sSelectorPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{sSelector}", with: sSelectorPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "eFilterActive": (wrappedValue: eFilterActive?.encodeToJSON(), isExplode: true),
            "sQuery": (wrappedValue: sQuery?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Accept-Language": acceptLanguage?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreditcardclientGetAutocompleteV2Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter eOrderBy
     */
    public enum EOrderBy_creditcardclientGetListV1: String, CaseIterable {
        case pkicreditcardclientidAsc = "pkiCreditcardclientID_ASC"
        case pkicreditcardclientidDesc = "pkiCreditcardclientID_DESC"
        case fkicreditcarddetailidAsc = "fkiCreditcarddetailID_ASC"
        case fkicreditcarddetailidDesc = "fkiCreditcarddetailID_DESC"
        case fkicreditcardtypeidAsc = "fkiCreditcardtypeID_ASC"
        case fkicreditcardtypeidDesc = "fkiCreditcardtypeID_DESC"
        case bcreditcardclientrelationisdefaultAsc = "bCreditcardclientrelationIsdefault_ASC"
        case bcreditcardclientrelationisdefaultDesc = "bCreditcardclientrelationIsdefault_DESC"
        case screditcardclientdescriptionAsc = "sCreditcardclientDescription_ASC"
        case screditcardclientdescriptionDesc = "sCreditcardclientDescription_DESC"
        case bcreditcardclientisactiveAsc = "bCreditcardclientIsactive_ASC"
        case bcreditcardclientisactiveDesc = "bCreditcardclientIsactive_DESC"
        case bcreditcardclientallowedagencypaymentAsc = "bCreditcardclientAllowedagencypayment_ASC"
        case bcreditcardclientallowedagencypaymentDesc = "bCreditcardclientAllowedagencypayment_DESC"
        case bcreditcardclientallowedtranquillitAsc = "bCreditcardclientAllowedtranquillit_ASC"
        case bcreditcardclientallowedtranquillitDesc = "bCreditcardclientAllowedtranquillit_DESC"
        case icreditcarddetailexpirationmonthAsc = "iCreditcarddetailExpirationmonth_ASC"
        case icreditcarddetailexpirationmonthDesc = "iCreditcarddetailExpirationmonth_DESC"
        case icreditcarddetailexpirationyearAsc = "iCreditcarddetailExpirationyear_ASC"
        case icreditcarddetailexpirationyearDesc = "iCreditcarddetailExpirationyear_DESC"
    }

    /**
     Retrieve Creditcardclient list
     
     - parameter eOrderBy: (query) Specify how you want the results to be sorted (optional)
     - parameter iRowMax: (query)  (optional)
     - parameter iRowOffset: (query)  (optional, default to 0)
     - parameter acceptLanguage: (header)  (optional)
     - parameter sFilter: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func creditcardclientGetListV1(eOrderBy: EOrderBy_creditcardclientGetListV1? = nil, iRowMax: Int? = nil, iRowOffset: Int? = nil, acceptLanguage: HeaderAcceptLanguage? = nil, sFilter: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CreditcardclientGetListV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return creditcardclientGetListV1WithRequestBuilder(eOrderBy: eOrderBy, iRowMax: iRowMax, iRowOffset: iRowOffset, acceptLanguage: acceptLanguage, sFilter: sFilter).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve Creditcardclient list
     - GET /1/object/creditcardclient/getList
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter eOrderBy: (query) Specify how you want the results to be sorted (optional)
     - parameter iRowMax: (query)  (optional)
     - parameter iRowOffset: (query)  (optional, default to 0)
     - parameter acceptLanguage: (header)  (optional)
     - parameter sFilter: (query)  (optional)
     - returns: RequestBuilder<CreditcardclientGetListV1Response> 
     */
    open class func creditcardclientGetListV1WithRequestBuilder(eOrderBy: EOrderBy_creditcardclientGetListV1? = nil, iRowMax: Int? = nil, iRowOffset: Int? = nil, acceptLanguage: HeaderAcceptLanguage? = nil, sFilter: String? = nil) -> RequestBuilder<CreditcardclientGetListV1Response> {
        let localVariablePath = "/1/object/creditcardclient/getList"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "eOrderBy": (wrappedValue: eOrderBy?.encodeToJSON(), isExplode: true),
            "iRowMax": (wrappedValue: iRowMax?.encodeToJSON(), isExplode: true),
            "iRowOffset": (wrappedValue: iRowOffset?.encodeToJSON(), isExplode: true),
            "sFilter": (wrappedValue: sFilter?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Accept-Language": acceptLanguage?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreditcardclientGetListV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Retrieve an existing Creditcardclient
     
     - parameter pkiCreditcardclientID: (path) The unique ID of the Creditcardclient 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func creditcardclientGetObjectV2(pkiCreditcardclientID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CreditcardclientGetObjectV2Response?, _ error: Error?) -> Void)) -> RequestTask {
        return creditcardclientGetObjectV2WithRequestBuilder(pkiCreditcardclientID: pkiCreditcardclientID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve an existing Creditcardclient
     - GET /2/object/creditcardclient/{pkiCreditcardclientID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiCreditcardclientID: (path) The unique ID of the Creditcardclient 
     - returns: RequestBuilder<CreditcardclientGetObjectV2Response> 
     */
    open class func creditcardclientGetObjectV2WithRequestBuilder(pkiCreditcardclientID: Int) -> RequestBuilder<CreditcardclientGetObjectV2Response> {
        var localVariablePath = "/2/object/creditcardclient/{pkiCreditcardclientID}"
        let pkiCreditcardclientIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiCreditcardclientID))"
        let pkiCreditcardclientIDPostEscape = pkiCreditcardclientIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiCreditcardclientID}", with: pkiCreditcardclientIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CreditcardclientGetObjectV2Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Patch an existing Creditcardclient
     
     - parameter pkiCreditcardclientID: (path) The unique ID of the Creditcardclient 
     - parameter creditcardclientPatchObjectV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func creditcardclientPatchObjectV1(pkiCreditcardclientID: Int, creditcardclientPatchObjectV1Request: CreditcardclientPatchObjectV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CommonResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return creditcardclientPatchObjectV1WithRequestBuilder(pkiCreditcardclientID: pkiCreditcardclientID, creditcardclientPatchObjectV1Request: creditcardclientPatchObjectV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Patch an existing Creditcardclient
     - PATCH /1/object/creditcardclient/{pkiCreditcardclientID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiCreditcardclientID: (path) The unique ID of the Creditcardclient 
     - parameter creditcardclientPatchObjectV1Request: (body)  
     - returns: RequestBuilder<CommonResponse> 
     */
    open class func creditcardclientPatchObjectV1WithRequestBuilder(pkiCreditcardclientID: Int, creditcardclientPatchObjectV1Request: CreditcardclientPatchObjectV1Request) -> RequestBuilder<CommonResponse> {
        var localVariablePath = "/1/object/creditcardclient/{pkiCreditcardclientID}"
        let pkiCreditcardclientIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiCreditcardclientID))"
        let pkiCreditcardclientIDPostEscape = pkiCreditcardclientIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiCreditcardclientID}", with: pkiCreditcardclientIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: creditcardclientPatchObjectV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CommonResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
