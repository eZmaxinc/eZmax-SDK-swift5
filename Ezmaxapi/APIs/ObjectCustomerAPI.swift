//
// ObjectCustomerAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ObjectCustomerAPI {

    /**
     Create a new Customer
     
     - parameter customerCreateObjectV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func customerCreateObjectV1(customerCreateObjectV1Request: CustomerCreateObjectV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CustomerCreateObjectV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return customerCreateObjectV1WithRequestBuilder(customerCreateObjectV1Request: customerCreateObjectV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create a new Customer
     - POST /1/object/customer
     - The endpoint allows to create one or many elements at once.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter customerCreateObjectV1Request: (body)  
     - returns: RequestBuilder<CustomerCreateObjectV1Response> 
     */
    open class func customerCreateObjectV1WithRequestBuilder(customerCreateObjectV1Request: CustomerCreateObjectV1Request) -> RequestBuilder<CustomerCreateObjectV1Response> {
        let localVariablePath = "/1/object/customer"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: customerCreateObjectV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CustomerCreateObjectV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Retrieve an existing Customer
     
     - parameter pkiCustomerID: (path) The unique ID of the Customer 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func customerGetObjectV2(pkiCustomerID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CustomerGetObjectV2Response?, _ error: Error?) -> Void)) -> RequestTask {
        return customerGetObjectV2WithRequestBuilder(pkiCustomerID: pkiCustomerID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve an existing Customer
     - GET /2/object/customer/{pkiCustomerID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiCustomerID: (path) The unique ID of the Customer 
     - returns: RequestBuilder<CustomerGetObjectV2Response> 
     */
    open class func customerGetObjectV2WithRequestBuilder(pkiCustomerID: Int) -> RequestBuilder<CustomerGetObjectV2Response> {
        var localVariablePath = "/2/object/customer/{pkiCustomerID}"
        let pkiCustomerIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiCustomerID))"
        let pkiCustomerIDPostEscape = pkiCustomerIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiCustomerID}", with: pkiCustomerIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CustomerGetObjectV2Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
