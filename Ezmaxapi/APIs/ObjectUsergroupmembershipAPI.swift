//
// ObjectUsergroupmembershipAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ObjectUsergroupmembershipAPI {

    /**
     Create a new Usergroupmembership
     
     - parameter usergroupmembershipCreateObjectV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func usergroupmembershipCreateObjectV1(usergroupmembershipCreateObjectV1Request: UsergroupmembershipCreateObjectV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UsergroupmembershipCreateObjectV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return usergroupmembershipCreateObjectV1WithRequestBuilder(usergroupmembershipCreateObjectV1Request: usergroupmembershipCreateObjectV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create a new Usergroupmembership
     - POST /1/object/usergroupmembership
     - The endpoint allows to create one or many elements at once.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter usergroupmembershipCreateObjectV1Request: (body)  
     - returns: RequestBuilder<UsergroupmembershipCreateObjectV1Response> 
     */
    open class func usergroupmembershipCreateObjectV1WithRequestBuilder(usergroupmembershipCreateObjectV1Request: UsergroupmembershipCreateObjectV1Request) -> RequestBuilder<UsergroupmembershipCreateObjectV1Response> {
        let localVariablePath = "/1/object/usergroupmembership"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: usergroupmembershipCreateObjectV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsergroupmembershipCreateObjectV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete an existing Usergroupmembership
     
     - parameter pkiUsergroupmembershipID: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func usergroupmembershipDeleteObjectV1(pkiUsergroupmembershipID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CommonResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return usergroupmembershipDeleteObjectV1WithRequestBuilder(pkiUsergroupmembershipID: pkiUsergroupmembershipID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete an existing Usergroupmembership
     - DELETE /1/object/usergroupmembership/{pkiUsergroupmembershipID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiUsergroupmembershipID: (path)  
     - returns: RequestBuilder<CommonResponse> 
     */
    open class func usergroupmembershipDeleteObjectV1WithRequestBuilder(pkiUsergroupmembershipID: Int) -> RequestBuilder<CommonResponse> {
        var localVariablePath = "/1/object/usergroupmembership/{pkiUsergroupmembershipID}"
        let pkiUsergroupmembershipIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiUsergroupmembershipID))"
        let pkiUsergroupmembershipIDPostEscape = pkiUsergroupmembershipIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiUsergroupmembershipID}", with: pkiUsergroupmembershipIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CommonResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Edit an existing Usergroupmembership
     
     - parameter pkiUsergroupmembershipID: (path)  
     - parameter usergroupmembershipEditObjectV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func usergroupmembershipEditObjectV1(pkiUsergroupmembershipID: Int, usergroupmembershipEditObjectV1Request: UsergroupmembershipEditObjectV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: CommonResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return usergroupmembershipEditObjectV1WithRequestBuilder(pkiUsergroupmembershipID: pkiUsergroupmembershipID, usergroupmembershipEditObjectV1Request: usergroupmembershipEditObjectV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Edit an existing Usergroupmembership
     - PUT /1/object/usergroupmembership/{pkiUsergroupmembershipID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiUsergroupmembershipID: (path)  
     - parameter usergroupmembershipEditObjectV1Request: (body)  
     - returns: RequestBuilder<CommonResponse> 
     */
    open class func usergroupmembershipEditObjectV1WithRequestBuilder(pkiUsergroupmembershipID: Int, usergroupmembershipEditObjectV1Request: UsergroupmembershipEditObjectV1Request) -> RequestBuilder<CommonResponse> {
        var localVariablePath = "/1/object/usergroupmembership/{pkiUsergroupmembershipID}"
        let pkiUsergroupmembershipIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiUsergroupmembershipID))"
        let pkiUsergroupmembershipIDPostEscape = pkiUsergroupmembershipIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiUsergroupmembershipID}", with: pkiUsergroupmembershipIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: usergroupmembershipEditObjectV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<CommonResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Retrieve an existing Usergroupmembership
     
     - parameter pkiUsergroupmembershipID: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func usergroupmembershipGetObjectV2(pkiUsergroupmembershipID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UsergroupmembershipGetObjectV2Response?, _ error: Error?) -> Void)) -> RequestTask {
        return usergroupmembershipGetObjectV2WithRequestBuilder(pkiUsergroupmembershipID: pkiUsergroupmembershipID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve an existing Usergroupmembership
     - GET /2/object/usergroupmembership/{pkiUsergroupmembershipID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiUsergroupmembershipID: (path)  
     - returns: RequestBuilder<UsergroupmembershipGetObjectV2Response> 
     */
    open class func usergroupmembershipGetObjectV2WithRequestBuilder(pkiUsergroupmembershipID: Int) -> RequestBuilder<UsergroupmembershipGetObjectV2Response> {
        var localVariablePath = "/2/object/usergroupmembership/{pkiUsergroupmembershipID}"
        let pkiUsergroupmembershipIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiUsergroupmembershipID))"
        let pkiUsergroupmembershipIDPostEscape = pkiUsergroupmembershipIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiUsergroupmembershipID}", with: pkiUsergroupmembershipIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UsergroupmembershipGetObjectV2Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
