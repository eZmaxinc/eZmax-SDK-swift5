//
// EzsigntemplateformfieldgroupResponseCompound.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Ezsigntemplateformfieldgroup Object and children */
public struct EzsigntemplateformfieldgroupResponseCompound: Codable, JSONEncodable, Hashable {

    static let pkiEzsigntemplateformfieldgroupIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let fkiEzsigntemplatedocumentIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let sEzsigntemplateformfieldgroupLabelRule = StringRule(minLength: 1, maxLength: 50, pattern: nil)
    static let iEzsigntemplateformfieldgroupStepRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let iEzsigntemplateformfieldgroupFilledminRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let iEzsigntemplateformfieldgroupFilledmaxRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let iEzsigntemplateformfieldgroupMaxlengthRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 65535, exclusiveMaximum: false, multipleOf: nil)
    static let sEzsigntemplateformfieldgroupRegexpRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^\\^.*\\$$|^$/")
    /** The unique ID of the Ezsigntemplateformfieldgroup */
    public var pkiEzsigntemplateformfieldgroupID: Int
    /** The unique ID of the Ezsigntemplatedocument */
    public var fkiEzsigntemplatedocumentID: Int
    public var eEzsigntemplateformfieldgroupType: FieldEEzsigntemplateformfieldgroupType
    @available(*, deprecated, message: "This property is deprecated.")
    public var eEzsigntemplateformfieldgroupSignerrequirement: FieldEEzsigntemplateformfieldgroupSignerrequirement?
    /** The Label for the Ezsigntemplateformfieldgroup */
    public var sEzsigntemplateformfieldgroupLabel: String
    /** The step when the Ezsigntemplatesigner will be invited to fill the form fields */
    public var iEzsigntemplateformfieldgroupStep: Int
    /** The default value for the Ezsigntemplateformfieldgroup  You can use the codes below and they will be replaced at signature time.    | Code | Description | Example | | ------------------------- | ------------ | ------------ | | {sUserFirstname} | The first name of the contact | John | | {sUserLastname} | The last name of the contact | Doe | | {sUserJobtitle} | The job title | Sales Representative | | {sEmailAddress} | The email address | email@example.com | | {sPhoneE164} | A phone number in E.164 Format | +15149901516 | | {sPhoneE164Cell} | A phone number in E.164 Format | +15149901516 | */
    public var sEzsigntemplateformfieldgroupDefaultvalue: String?
    /** The minimum number of Ezsigntemplateformfield that must be filled in the Ezsigntemplateformfieldgroup */
    public var iEzsigntemplateformfieldgroupFilledmin: Int
    /** The maximum number of Ezsigntemplateformfield that must be filled in the Ezsigntemplateformfieldgroup */
    public var iEzsigntemplateformfieldgroupFilledmax: Int
    /** Whether the Ezsigntemplateformfieldgroup is read only or not. */
    public var bEzsigntemplateformfieldgroupReadonly: Bool
    /** The maximum length for the value in the Ezsigntemplateformfieldgroup  This can only be set if eEzsigntemplateformfieldgroupType is **Text** or **Textarea** */
    public var iEzsigntemplateformfieldgroupMaxlength: Int?
    /** Whether the Ezsigntemplateformfieldgroup is encrypted in the database or not. Encrypted values are not displayed on the Ezsigndocument. This can only be set if eEzsigntemplateformfieldgroupType is **Text** or **Textarea** */
    public var bEzsigntemplateformfieldgroupEncrypted: Bool?
    /** A regular expression to indicate what values are acceptable for the Ezsigntemplateformfieldgroup.  This can only be set if eEzsigntemplateformfieldgroupType is **Text** or **Textarea** */
    public var sEzsigntemplateformfieldgroupRegexp: String?
    public var eEzsigntemplateformfieldgroupTextvalidation: EnumTextvalidation?
    /** A tooltip that will be presented to Ezsigntemplatesigner about the Ezsigntemplateformfieldgroup */
    public var tEzsigntemplateformfieldgroupTooltip: String?
    public var eEzsigntemplateformfieldgroupTooltipposition: FieldEEzsigntemplateformfieldgroupTooltipposition?
    public var aObjEzsigntemplateformfieldgroupsigner: [EzsigntemplateformfieldgroupsignerResponseCompound]
    public var aObjDropdownElement: [CustomDropdownElementResponseCompound]?
    public var aObjEzsigntemplateformfield: [EzsigntemplateformfieldResponseCompound]

    public init(pkiEzsigntemplateformfieldgroupID: Int, fkiEzsigntemplatedocumentID: Int, eEzsigntemplateformfieldgroupType: FieldEEzsigntemplateformfieldgroupType, eEzsigntemplateformfieldgroupSignerrequirement: FieldEEzsigntemplateformfieldgroupSignerrequirement? = nil, sEzsigntemplateformfieldgroupLabel: String, iEzsigntemplateformfieldgroupStep: Int, sEzsigntemplateformfieldgroupDefaultvalue: String? = nil, iEzsigntemplateformfieldgroupFilledmin: Int, iEzsigntemplateformfieldgroupFilledmax: Int, bEzsigntemplateformfieldgroupReadonly: Bool, iEzsigntemplateformfieldgroupMaxlength: Int? = nil, bEzsigntemplateformfieldgroupEncrypted: Bool? = nil, sEzsigntemplateformfieldgroupRegexp: String? = nil, eEzsigntemplateformfieldgroupTextvalidation: EnumTextvalidation? = nil, tEzsigntemplateformfieldgroupTooltip: String? = nil, eEzsigntemplateformfieldgroupTooltipposition: FieldEEzsigntemplateformfieldgroupTooltipposition? = nil, aObjEzsigntemplateformfieldgroupsigner: [EzsigntemplateformfieldgroupsignerResponseCompound], aObjDropdownElement: [CustomDropdownElementResponseCompound]? = nil, aObjEzsigntemplateformfield: [EzsigntemplateformfieldResponseCompound]) {
        self.pkiEzsigntemplateformfieldgroupID = pkiEzsigntemplateformfieldgroupID
        self.fkiEzsigntemplatedocumentID = fkiEzsigntemplatedocumentID
        self.eEzsigntemplateformfieldgroupType = eEzsigntemplateformfieldgroupType
        self.eEzsigntemplateformfieldgroupSignerrequirement = eEzsigntemplateformfieldgroupSignerrequirement
        self.sEzsigntemplateformfieldgroupLabel = sEzsigntemplateformfieldgroupLabel
        self.iEzsigntemplateformfieldgroupStep = iEzsigntemplateformfieldgroupStep
        self.sEzsigntemplateformfieldgroupDefaultvalue = sEzsigntemplateformfieldgroupDefaultvalue
        self.iEzsigntemplateformfieldgroupFilledmin = iEzsigntemplateformfieldgroupFilledmin
        self.iEzsigntemplateformfieldgroupFilledmax = iEzsigntemplateformfieldgroupFilledmax
        self.bEzsigntemplateformfieldgroupReadonly = bEzsigntemplateformfieldgroupReadonly
        self.iEzsigntemplateformfieldgroupMaxlength = iEzsigntemplateformfieldgroupMaxlength
        self.bEzsigntemplateformfieldgroupEncrypted = bEzsigntemplateformfieldgroupEncrypted
        self.sEzsigntemplateformfieldgroupRegexp = sEzsigntemplateformfieldgroupRegexp
        self.eEzsigntemplateformfieldgroupTextvalidation = eEzsigntemplateformfieldgroupTextvalidation
        self.tEzsigntemplateformfieldgroupTooltip = tEzsigntemplateformfieldgroupTooltip
        self.eEzsigntemplateformfieldgroupTooltipposition = eEzsigntemplateformfieldgroupTooltipposition
        self.aObjEzsigntemplateformfieldgroupsigner = aObjEzsigntemplateformfieldgroupsigner
        self.aObjDropdownElement = aObjDropdownElement
        self.aObjEzsigntemplateformfield = aObjEzsigntemplateformfield
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsigntemplateformfieldgroupID
        case fkiEzsigntemplatedocumentID
        case eEzsigntemplateformfieldgroupType
        case eEzsigntemplateformfieldgroupSignerrequirement
        case sEzsigntemplateformfieldgroupLabel
        case iEzsigntemplateformfieldgroupStep
        case sEzsigntemplateformfieldgroupDefaultvalue
        case iEzsigntemplateformfieldgroupFilledmin
        case iEzsigntemplateformfieldgroupFilledmax
        case bEzsigntemplateformfieldgroupReadonly
        case iEzsigntemplateformfieldgroupMaxlength
        case bEzsigntemplateformfieldgroupEncrypted
        case sEzsigntemplateformfieldgroupRegexp
        case eEzsigntemplateformfieldgroupTextvalidation
        case tEzsigntemplateformfieldgroupTooltip
        case eEzsigntemplateformfieldgroupTooltipposition
        case aObjEzsigntemplateformfieldgroupsigner = "a_objEzsigntemplateformfieldgroupsigner"
        case aObjDropdownElement = "a_objDropdownElement"
        case aObjEzsigntemplateformfield = "a_objEzsigntemplateformfield"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiEzsigntemplateformfieldgroupID, forKey: .pkiEzsigntemplateformfieldgroupID)
        try container.encode(fkiEzsigntemplatedocumentID, forKey: .fkiEzsigntemplatedocumentID)
        try container.encode(eEzsigntemplateformfieldgroupType, forKey: .eEzsigntemplateformfieldgroupType)
        try container.encodeIfPresent(eEzsigntemplateformfieldgroupSignerrequirement, forKey: .eEzsigntemplateformfieldgroupSignerrequirement)
        try container.encode(sEzsigntemplateformfieldgroupLabel, forKey: .sEzsigntemplateformfieldgroupLabel)
        try container.encode(iEzsigntemplateformfieldgroupStep, forKey: .iEzsigntemplateformfieldgroupStep)
        try container.encodeIfPresent(sEzsigntemplateformfieldgroupDefaultvalue, forKey: .sEzsigntemplateformfieldgroupDefaultvalue)
        try container.encode(iEzsigntemplateformfieldgroupFilledmin, forKey: .iEzsigntemplateformfieldgroupFilledmin)
        try container.encode(iEzsigntemplateformfieldgroupFilledmax, forKey: .iEzsigntemplateformfieldgroupFilledmax)
        try container.encode(bEzsigntemplateformfieldgroupReadonly, forKey: .bEzsigntemplateformfieldgroupReadonly)
        try container.encodeIfPresent(iEzsigntemplateformfieldgroupMaxlength, forKey: .iEzsigntemplateformfieldgroupMaxlength)
        try container.encodeIfPresent(bEzsigntemplateformfieldgroupEncrypted, forKey: .bEzsigntemplateformfieldgroupEncrypted)
        try container.encodeIfPresent(sEzsigntemplateformfieldgroupRegexp, forKey: .sEzsigntemplateformfieldgroupRegexp)
        try container.encodeIfPresent(eEzsigntemplateformfieldgroupTextvalidation, forKey: .eEzsigntemplateformfieldgroupTextvalidation)
        try container.encodeIfPresent(tEzsigntemplateformfieldgroupTooltip, forKey: .tEzsigntemplateformfieldgroupTooltip)
        try container.encodeIfPresent(eEzsigntemplateformfieldgroupTooltipposition, forKey: .eEzsigntemplateformfieldgroupTooltipposition)
        try container.encode(aObjEzsigntemplateformfieldgroupsigner, forKey: .aObjEzsigntemplateformfieldgroupsigner)
        try container.encodeIfPresent(aObjDropdownElement, forKey: .aObjDropdownElement)
        try container.encode(aObjEzsigntemplateformfield, forKey: .aObjEzsigntemplateformfield)
    }
}

