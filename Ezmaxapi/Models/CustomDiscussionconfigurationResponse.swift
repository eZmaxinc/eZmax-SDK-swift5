//
// CustomDiscussionconfigurationResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Custom Discussionconfiguration Object */
public struct CustomDiscussionconfigurationResponse: Codable, JSONEncodable, Hashable {

    /** If the added Discussionmembership will have access to the entire history or not */
    public var bDiscussionconfigurationCompletehistorywhenadded: Bool
    /** If the the creation of the Discussion is allowed or not */
    public var bDiscussionconfigurationCreateallowed: Bool
    /** If the the destruction of the Discussion is allowed or not */
    public var bDiscussionconfigurationDeleteallowed: Bool
    /** If the the destruction of the Discussionmessage is allowed or not */
    public var bDiscussionconfigurationDeletediscussionmessageallowed: Bool
    /** If the the creation of the Discussionmessage is allowed or not */
    public var bDiscussionconfigurationEditdiscussionmessageallowed: Bool

    public init(bDiscussionconfigurationCompletehistorywhenadded: Bool, bDiscussionconfigurationCreateallowed: Bool, bDiscussionconfigurationDeleteallowed: Bool, bDiscussionconfigurationDeletediscussionmessageallowed: Bool, bDiscussionconfigurationEditdiscussionmessageallowed: Bool) {
        self.bDiscussionconfigurationCompletehistorywhenadded = bDiscussionconfigurationCompletehistorywhenadded
        self.bDiscussionconfigurationCreateallowed = bDiscussionconfigurationCreateallowed
        self.bDiscussionconfigurationDeleteallowed = bDiscussionconfigurationDeleteallowed
        self.bDiscussionconfigurationDeletediscussionmessageallowed = bDiscussionconfigurationDeletediscussionmessageallowed
        self.bDiscussionconfigurationEditdiscussionmessageallowed = bDiscussionconfigurationEditdiscussionmessageallowed
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bDiscussionconfigurationCompletehistorywhenadded
        case bDiscussionconfigurationCreateallowed
        case bDiscussionconfigurationDeleteallowed
        case bDiscussionconfigurationDeletediscussionmessageallowed
        case bDiscussionconfigurationEditdiscussionmessageallowed
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(bDiscussionconfigurationCompletehistorywhenadded, forKey: .bDiscussionconfigurationCompletehistorywhenadded)
        try container.encode(bDiscussionconfigurationCreateallowed, forKey: .bDiscussionconfigurationCreateallowed)
        try container.encode(bDiscussionconfigurationDeleteallowed, forKey: .bDiscussionconfigurationDeleteallowed)
        try container.encode(bDiscussionconfigurationDeletediscussionmessageallowed, forKey: .bDiscussionconfigurationDeletediscussionmessageallowed)
        try container.encode(bDiscussionconfigurationEditdiscussionmessageallowed, forKey: .bDiscussionconfigurationEditdiscussionmessageallowed)
    }
}

