//
// EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Payload for POST /1/object/ezsigntemplatepublic/{pkiEzsigntemplatepublicID}/resetLimitExceededCounter */
public struct EzsigntemplatepublicResetLimitExceededCounterV1ResponseMPayload: Codable, JSONEncodable, Hashable {

    static let dtEzsigntemplatepublicLimitexceededsinceRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/")
    /** The limitexceededsince of the Ezsigntemplatepublic */
    public var dtEzsigntemplatepublicLimitexceededsince: String

    public init(dtEzsigntemplatepublicLimitexceededsince: String) {
        self.dtEzsigntemplatepublicLimitexceededsince = dtEzsigntemplatepublicLimitexceededsince
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case dtEzsigntemplatepublicLimitexceededsince
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(dtEzsigntemplatepublicLimitexceededsince, forKey: .dtEzsigntemplatepublicLimitexceededsince)
    }
}

