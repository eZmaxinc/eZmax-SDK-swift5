//
// EzsigndocumentCreateElementV3Response.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Ezsigndocument createObject Response */
public struct EzsigndocumentCreateElementV3Response: Codable, JSONEncodable, Hashable {

    public static let pkiEzsigndocumentIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** The unique ID of the Ezsigndocument */
    public var pkiEzsigndocumentID: Int
    /** An array of possibly matching template. */
    public var aObjMatchingtemplate: [EzsigndocumentMatchingtemplateV3Response]

    public init(pkiEzsigndocumentID: Int, aObjMatchingtemplate: [EzsigndocumentMatchingtemplateV3Response]) {
        self.pkiEzsigndocumentID = pkiEzsigndocumentID
        self.aObjMatchingtemplate = aObjMatchingtemplate
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsigndocumentID
        case aObjMatchingtemplate = "a_objMatchingtemplate"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiEzsigndocumentID, forKey: .pkiEzsigndocumentID)
        try container.encode(aObjMatchingtemplate, forKey: .aObjMatchingtemplate)
    }
}

