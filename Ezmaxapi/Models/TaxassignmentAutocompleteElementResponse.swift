//
// TaxassignmentAutocompleteElementResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Taxassignment AutocompleteElement Response */
public struct TaxassignmentAutocompleteElementResponse: Codable, JSONEncodable, Hashable {

    public static let pkiTaxassignmentIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 15, exclusiveMaximum: false, multipleOf: nil)
    /** The description of the Taxassignment  in the language of the requester */
    public var sTaxassignmentDescriptionX: String
    /** The unique ID of the Taxassignment.  Valid values:  |Value|Description| |-|-| |1|No tax| |2|GST| |3|HST (ON)| |4|HST (NB)| |5|HST (NS)| |6|HST (NL)| |7|HST (PE)| |8|GST + QST (QC)| |9|GST + QST (QC) Non-Recoverable| |10|GST + PST (BC)| |11|GST + PST (SK)| |12|GST + RST (MB)| |13|GST + PST (BC) Non-Recoverable| |14|GST + PST (SK) Non-Recoverable| |15|GST + RST (MB) Non-Recoverable| */
    public var pkiTaxassignmentID: Int
    /** Whether the Taxassignment is active or not */
    public var bTaxassignmentIsactive: Bool

    public init(sTaxassignmentDescriptionX: String, pkiTaxassignmentID: Int, bTaxassignmentIsactive: Bool) {
        self.sTaxassignmentDescriptionX = sTaxassignmentDescriptionX
        self.pkiTaxassignmentID = pkiTaxassignmentID
        self.bTaxassignmentIsactive = bTaxassignmentIsactive
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sTaxassignmentDescriptionX
        case pkiTaxassignmentID
        case bTaxassignmentIsactive
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sTaxassignmentDescriptionX, forKey: .sTaxassignmentDescriptionX)
        try container.encode(pkiTaxassignmentID, forKey: .pkiTaxassignmentID)
        try container.encode(bTaxassignmentIsactive, forKey: .bTaxassignmentIsactive)
    }
}

