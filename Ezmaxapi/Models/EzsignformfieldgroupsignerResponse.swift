//
// EzsignformfieldgroupsignerResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Ezsignformfieldgroupsigner Object */
public struct EzsignformfieldgroupsignerResponse: Codable, JSONEncodable, Hashable {

    static let pkiEzsignformfieldgroupsignerIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let fkiEzsignfoldersignerassociationIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** The unique ID of the Ezsignformfieldgroupsigner */
    public var pkiEzsignformfieldgroupsignerID: Int
    /** The unique ID of the Ezsignfoldersignerassociation */
    public var fkiEzsignfoldersignerassociationID: Int

    public init(pkiEzsignformfieldgroupsignerID: Int, fkiEzsignfoldersignerassociationID: Int) {
        self.pkiEzsignformfieldgroupsignerID = pkiEzsignformfieldgroupsignerID
        self.fkiEzsignfoldersignerassociationID = fkiEzsignfoldersignerassociationID
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsignformfieldgroupsignerID
        case fkiEzsignfoldersignerassociationID
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiEzsignformfieldgroupsignerID, forKey: .pkiEzsignformfieldgroupsignerID)
        try container.encode(fkiEzsignfoldersignerassociationID, forKey: .fkiEzsignfoldersignerassociationID)
    }
}

