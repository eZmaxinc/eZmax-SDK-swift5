//
// EzsignuserRequestCompound.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Ezsignuser Object and children */
public struct EzsignuserRequestCompound: Codable, JSONEncodable, Hashable {

    static let pkiEzsignuserIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 65535, exclusiveMaximum: false, multipleOf: nil)
    static let fkiContactIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** The unique ID of the Ezsignuser */
    public var pkiEzsignuserID: Int?
    /** The unique ID of the Contact */
    public var fkiContactID: Int
    public var objContact: ContactRequestCompoundV2

    public init(pkiEzsignuserID: Int? = nil, fkiContactID: Int, objContact: ContactRequestCompoundV2) {
        self.pkiEzsignuserID = pkiEzsignuserID
        self.fkiContactID = fkiContactID
        self.objContact = objContact
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsignuserID
        case fkiContactID
        case objContact
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(pkiEzsignuserID, forKey: .pkiEzsignuserID)
        try container.encode(fkiContactID, forKey: .fkiContactID)
        try container.encode(objContact, forKey: .objContact)
    }
}

