//
// CustomEzsigndocumentEzsignsignaturesAutomaticResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An Ezsigndocument Object in the context of an EzsignsignaturesAutomatic path */
public struct CustomEzsigndocumentEzsignsignaturesAutomaticResponse: Codable, JSONEncodable, Hashable {

    public static let pkiEzsigndocumentIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** The unique ID of the Ezsigndocument */
    public var pkiEzsigndocumentID: Int
    /** The name of the document that will be presented to Ezsignfoldersignerassociations */
    public var sEzsigndocumentName: String
    public var aObjEzsignsignature: [CustomEzsignsignatureEzsignsignaturesAutomaticResponse]

    public init(pkiEzsigndocumentID: Int, sEzsigndocumentName: String, aObjEzsignsignature: [CustomEzsignsignatureEzsignsignaturesAutomaticResponse]) {
        self.pkiEzsigndocumentID = pkiEzsigndocumentID
        self.sEzsigndocumentName = sEzsigndocumentName
        self.aObjEzsignsignature = aObjEzsignsignature
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsigndocumentID
        case sEzsigndocumentName
        case aObjEzsignsignature = "a_objEzsignsignature"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiEzsigndocumentID, forKey: .pkiEzsigndocumentID)
        try container.encode(sEzsigndocumentName, forKey: .sEzsigndocumentName)
        try container.encode(aObjEzsignsignature, forKey: .aObjEzsignsignature)
    }
}

