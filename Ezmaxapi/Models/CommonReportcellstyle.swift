//
// CommonReportcellstyle.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Styles applied to a Reportcell  */
public struct CommonReportcellstyle: Codable, JSONEncodable, Hashable {

    /** Whether there is a border at the top of the Reportcell */
    public var bReportcellstyleBordertop: Bool
    /** Whether there is a border at the bottom of the Reportcell */
    public var bReportcellstyleBorderbottom: Bool
    /** Whether there is a border at the left of the Reportcell */
    public var bReportcellstyleBorderleft: Bool
    /** Whether there is a border at the right of the Reportcell */
    public var bReportcellstyleBorderright: Bool
    public var eReportcellHorizontalalignment: EnumHorizontalalignment
    public var eReportcellVerticalalignment: EnumVerticalalignment
    public var eReportcellFontweight: EnumFontweight
    public var eReportcellFontunderline: EnumFontunderline

    public init(bReportcellstyleBordertop: Bool, bReportcellstyleBorderbottom: Bool, bReportcellstyleBorderleft: Bool, bReportcellstyleBorderright: Bool, eReportcellHorizontalalignment: EnumHorizontalalignment, eReportcellVerticalalignment: EnumVerticalalignment, eReportcellFontweight: EnumFontweight, eReportcellFontunderline: EnumFontunderline) {
        self.bReportcellstyleBordertop = bReportcellstyleBordertop
        self.bReportcellstyleBorderbottom = bReportcellstyleBorderbottom
        self.bReportcellstyleBorderleft = bReportcellstyleBorderleft
        self.bReportcellstyleBorderright = bReportcellstyleBorderright
        self.eReportcellHorizontalalignment = eReportcellHorizontalalignment
        self.eReportcellVerticalalignment = eReportcellVerticalalignment
        self.eReportcellFontweight = eReportcellFontweight
        self.eReportcellFontunderline = eReportcellFontunderline
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case bReportcellstyleBordertop
        case bReportcellstyleBorderbottom
        case bReportcellstyleBorderleft
        case bReportcellstyleBorderright
        case eReportcellHorizontalalignment
        case eReportcellVerticalalignment
        case eReportcellFontweight
        case eReportcellFontunderline
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(bReportcellstyleBordertop, forKey: .bReportcellstyleBordertop)
        try container.encode(bReportcellstyleBorderbottom, forKey: .bReportcellstyleBorderbottom)
        try container.encode(bReportcellstyleBorderleft, forKey: .bReportcellstyleBorderleft)
        try container.encode(bReportcellstyleBorderright, forKey: .bReportcellstyleBorderright)
        try container.encode(eReportcellHorizontalalignment, forKey: .eReportcellHorizontalalignment)
        try container.encode(eReportcellVerticalalignment, forKey: .eReportcellVerticalalignment)
        try container.encode(eReportcellFontweight, forKey: .eReportcellFontweight)
        try container.encode(eReportcellFontunderline, forKey: .eReportcellFontunderline)
    }
}

