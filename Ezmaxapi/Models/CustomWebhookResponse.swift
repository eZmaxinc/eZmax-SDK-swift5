//
// CustomWebhookResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A custom Webhook object */
public struct CustomWebhookResponse: Codable, JSONEncodable, Hashable {

    public enum EWebhookEmittype: String, Codable, CaseIterable {
        case automatic = "Automatic"
        case manual = "Manual"
        case test = "Test"
    }
    static let pksCustomerCodeRule = StringRule(minLength: 2, maxLength: 6, pattern: nil)
    /** The customer code assigned to your account */
    public var pksCustomerCode: String
    /** Wheter the webhook received is a manual test or a real event */
    @available(*, deprecated, message: "This property is deprecated.")
    public var bWebhookTest: Bool
    /** Wheter the webhook received is a manual test or a real event */
    public var eWebhookEmittype: EWebhookEmittype?

    public init(pksCustomerCode: String, bWebhookTest: Bool, eWebhookEmittype: EWebhookEmittype? = nil) {
        self.pksCustomerCode = pksCustomerCode
        self.bWebhookTest = bWebhookTest
        self.eWebhookEmittype = eWebhookEmittype
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pksCustomerCode
        case bWebhookTest
        case eWebhookEmittype
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pksCustomerCode, forKey: .pksCustomerCode)
        try container.encode(bWebhookTest, forKey: .bWebhookTest)
        try container.encodeIfPresent(eWebhookEmittype, forKey: .eWebhookEmittype)
    }
}

