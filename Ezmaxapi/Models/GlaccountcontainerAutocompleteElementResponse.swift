//
// GlaccountcontainerAutocompleteElementResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Glaccountcontainer AutocompleteElement Response */
public struct GlaccountcontainerAutocompleteElementResponse: Codable, JSONEncodable, Hashable {

    static let pkiGlaccountcontainerIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** The unique ID of the Glaccountcontainer */
    public var pkiGlaccountcontainerID: Int
    /** The Code for the Glaccountcontainer */
    public var sGlaccountcontainerLongcode: String
    /** The Description for the Glaccountcontainer in the language of the requester */
    public var sGlaccountcontainerLongdescriptionX: String
    /** Whether the glaccountcontainer is active or not */
    public var bGlaccountcontainerIsactive: Bool

    public init(pkiGlaccountcontainerID: Int, sGlaccountcontainerLongcode: String, sGlaccountcontainerLongdescriptionX: String, bGlaccountcontainerIsactive: Bool) {
        self.pkiGlaccountcontainerID = pkiGlaccountcontainerID
        self.sGlaccountcontainerLongcode = sGlaccountcontainerLongcode
        self.sGlaccountcontainerLongdescriptionX = sGlaccountcontainerLongdescriptionX
        self.bGlaccountcontainerIsactive = bGlaccountcontainerIsactive
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiGlaccountcontainerID
        case sGlaccountcontainerLongcode
        case sGlaccountcontainerLongdescriptionX
        case bGlaccountcontainerIsactive
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiGlaccountcontainerID, forKey: .pkiGlaccountcontainerID)
        try container.encode(sGlaccountcontainerLongcode, forKey: .sGlaccountcontainerLongcode)
        try container.encode(sGlaccountcontainerLongdescriptionX, forKey: .sGlaccountcontainerLongdescriptionX)
        try container.encode(bGlaccountcontainerIsactive, forKey: .bGlaccountcontainerIsactive)
    }
}

