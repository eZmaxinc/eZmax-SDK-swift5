//
// BrandingAutocompleteElementResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Branding AutocompleteElement Response */
public struct BrandingAutocompleteElementResponse: Codable, JSONEncodable, Hashable {

    static let pkiBrandingIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** The Description of the Branding in the language of the requester */
    public var sBrandingDescriptionX: String
    /** The unique ID of the Branding */
    public var pkiBrandingID: Int
    /** Whether the Branding is active or not */
    public var bBrandingIsactive: Bool

    public init(sBrandingDescriptionX: String, pkiBrandingID: Int, bBrandingIsactive: Bool) {
        self.sBrandingDescriptionX = sBrandingDescriptionX
        self.pkiBrandingID = pkiBrandingID
        self.bBrandingIsactive = bBrandingIsactive
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sBrandingDescriptionX
        case pkiBrandingID
        case bBrandingIsactive
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sBrandingDescriptionX, forKey: .sBrandingDescriptionX)
        try container.encode(pkiBrandingID, forKey: .pkiBrandingID)
        try container.encode(bBrandingIsactive, forKey: .bBrandingIsactive)
    }
}

