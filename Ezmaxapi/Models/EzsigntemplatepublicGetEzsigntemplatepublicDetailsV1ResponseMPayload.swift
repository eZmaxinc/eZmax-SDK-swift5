//
// EzsigntemplatepublicGetEzsigntemplatepublicDetailsV1ResponseMPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Payload for POST /1/object/ezsigntemplatepublic/getEzsigntemplatepublicDetails */
public struct EzsigntemplatepublicGetEzsigntemplatepublicDetailsV1ResponseMPayload: Codable, JSONEncodable, Hashable {

    static let fkiUserlogintypeIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** A Custom Branding Object */
    public var objBranding: AnyCodable?
    /** The unique ID of the Userlogintype  Valid values:  |Value|Description|Detail| |-|-|-| |1|**Email Only**|The Ezsignsigner will receive a secure link by email| |2|**Email and phone or SMS**|The Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**| |3|**Email and secret question**|The Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer| |4|**In person only**|The Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type| |5|**In person with phone or SMS**|The Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**| |6|**Embedded**|The Ezsignsigner will only be able to sign in the embedded solution. No email will be sent for invitation to sign. **Additional fee applies**|   |7|**Embedded with phone or SMS**|The Ezsignsigner will only be able to sign in the embedded solution and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**|   |8|**No validation**|The Ezsignsigner will not receive an email and won't have to validate his connection using 2 factor. **Additional fee applies**|      |9|**Sms only**|The Ezsignsigner will not receive an email but will will need to authenticate using SMS. **Additional fee applies**|      */
    public var fkiUserlogintypeID: Int
    public var aSEzsigntemplatesignerDescription: [String]

    public init(objBranding: AnyCodable? = nil, fkiUserlogintypeID: Int, aSEzsigntemplatesignerDescription: [String]) {
        self.objBranding = objBranding
        self.fkiUserlogintypeID = fkiUserlogintypeID
        self.aSEzsigntemplatesignerDescription = aSEzsigntemplatesignerDescription
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case objBranding
        case fkiUserlogintypeID
        case aSEzsigntemplatesignerDescription = "a_sEzsigntemplatesignerDescription"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(objBranding, forKey: .objBranding)
        try container.encode(fkiUserlogintypeID, forKey: .fkiUserlogintypeID)
        try container.encode(aSEzsigntemplatesignerDescription, forKey: .aSEzsigntemplatesignerDescription)
    }
}

