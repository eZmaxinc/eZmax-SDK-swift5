//
// CustomEzsignfolderEzsignsignaturesAutomaticResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An Ezsignfolder Object in the context of an EzsignsignaturesAutomatic path */
public struct CustomEzsignfolderEzsignsignaturesAutomaticResponse: Codable, JSONEncodable, Hashable {

    public static let pkiEzsignfolderIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public static let sEzsignfolderDescriptionRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,75}$/")
    /** The unique ID of the Ezsignfolder */
    public var pkiEzsignfolderID: Int
    /** The description of the Ezsignfolder */
    public var sEzsignfolderDescription: String
    public var aObjEzsigndocument: [CustomEzsigndocumentEzsignsignaturesAutomaticResponse]

    public init(pkiEzsignfolderID: Int, sEzsignfolderDescription: String, aObjEzsigndocument: [CustomEzsigndocumentEzsignsignaturesAutomaticResponse]) {
        self.pkiEzsignfolderID = pkiEzsignfolderID
        self.sEzsignfolderDescription = sEzsignfolderDescription
        self.aObjEzsigndocument = aObjEzsigndocument
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsignfolderID
        case sEzsignfolderDescription
        case aObjEzsigndocument = "a_objEzsigndocument"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiEzsignfolderID, forKey: .pkiEzsignfolderID)
        try container.encode(sEzsignfolderDescription, forKey: .sEzsignfolderDescription)
        try container.encode(aObjEzsigndocument, forKey: .aObjEzsigndocument)
    }
}

