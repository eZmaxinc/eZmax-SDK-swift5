//
// CustomCreditcardtransactionresponseResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A custom Creditcardtransactionresponse Object */
public struct CustomCreditcardtransactionresponseResponse: Codable, JSONEncodable, Hashable {

    public static let sCreditcardtransactionISOcodeRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{1,2}$/")
    public static let sCreditcardtransactionResponsecodeRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{1,3}$/")
    public static let sCreditcardtransactionResponseterminalmessageRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,50}$/")
    /** The ISO code */
    public var sCreditcardtransactionISOcode: String
    /** The response code */
    public var sCreditcardtransactionResponsecode: String
    /** The terminal response message */
    public var sCreditcardtransactionResponseterminalmessage: String
    public var eCreditcardtransactionAvsresult: FieldECreditcardtransactionAvsresult?
    public var eCreditcardtransactionCvdresult: FieldECreditcardtransactionCvdresult?

    public init(sCreditcardtransactionISOcode: String, sCreditcardtransactionResponsecode: String, sCreditcardtransactionResponseterminalmessage: String, eCreditcardtransactionAvsresult: FieldECreditcardtransactionAvsresult? = nil, eCreditcardtransactionCvdresult: FieldECreditcardtransactionCvdresult? = nil) {
        self.sCreditcardtransactionISOcode = sCreditcardtransactionISOcode
        self.sCreditcardtransactionResponsecode = sCreditcardtransactionResponsecode
        self.sCreditcardtransactionResponseterminalmessage = sCreditcardtransactionResponseterminalmessage
        self.eCreditcardtransactionAvsresult = eCreditcardtransactionAvsresult
        self.eCreditcardtransactionCvdresult = eCreditcardtransactionCvdresult
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sCreditcardtransactionISOcode
        case sCreditcardtransactionResponsecode
        case sCreditcardtransactionResponseterminalmessage
        case eCreditcardtransactionAvsresult
        case eCreditcardtransactionCvdresult
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sCreditcardtransactionISOcode, forKey: .sCreditcardtransactionISOcode)
        try container.encode(sCreditcardtransactionResponsecode, forKey: .sCreditcardtransactionResponsecode)
        try container.encode(sCreditcardtransactionResponseterminalmessage, forKey: .sCreditcardtransactionResponseterminalmessage)
        try container.encodeIfPresent(eCreditcardtransactionAvsresult, forKey: .eCreditcardtransactionAvsresult)
        try container.encodeIfPresent(eCreditcardtransactionCvdresult, forKey: .eCreditcardtransactionCvdresult)
    }
}

