//
// CurrencyAutocompleteElementResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Currency AutocompleteElement Response */
public struct CurrencyAutocompleteElementResponse: Codable, JSONEncodable, Hashable {

    public static let pkiCurrencyIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public static let sCurrencyDescriptionXRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{1,20}$/")
    /** The unique ID of the Currency. */
    public var pkiCurrencyID: Int
    /** The description of the Currency in the language of the requester */
    public var sCurrencyDescriptionX: String
    /** Whether the Currency is active or not */
    public var bCurrencyIsactive: Bool

    public init(pkiCurrencyID: Int, sCurrencyDescriptionX: String, bCurrencyIsactive: Bool) {
        self.pkiCurrencyID = pkiCurrencyID
        self.sCurrencyDescriptionX = sCurrencyDescriptionX
        self.bCurrencyIsactive = bCurrencyIsactive
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiCurrencyID
        case sCurrencyDescriptionX
        case bCurrencyIsactive
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiCurrencyID, forKey: .pkiCurrencyID)
        try container.encode(sCurrencyDescriptionX, forKey: .sCurrencyDescriptionX)
        try container.encode(bCurrencyIsactive, forKey: .bCurrencyIsactive)
    }
}

