//
// MultilingualSupplyDescription.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The description1 of the Supply */
public struct MultilingualSupplyDescription: Codable, JSONEncodable, Hashable {

    public static let sSupplyDescription1Rule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,50}$/")
    public static let sSupplyDescription2Rule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,50}$/")
    /** The description of the Supply in French */
    public var sSupplyDescription1: String?
    /** The description of the Supply in English */
    public var sSupplyDescription2: String?

    public init(sSupplyDescription1: String? = nil, sSupplyDescription2: String? = nil) {
        self.sSupplyDescription1 = sSupplyDescription1
        self.sSupplyDescription2 = sSupplyDescription2
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sSupplyDescription1
        case sSupplyDescription2
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sSupplyDescription1, forKey: .sSupplyDescription1)
        try container.encodeIfPresent(sSupplyDescription2, forKey: .sSupplyDescription2)
    }
}

