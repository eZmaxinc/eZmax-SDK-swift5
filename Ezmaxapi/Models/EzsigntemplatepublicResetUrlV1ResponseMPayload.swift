//
// EzsigntemplatepublicResetUrlV1ResponseMPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Payload for POST /1/object/ezsigntemplatepublic/{pkiEzsigntemplatepublicID}/resetUrl */
public struct EzsigntemplatepublicResetUrlV1ResponseMPayload: Codable, JSONEncodable, Hashable {

    public static let sEzsigntemplatepublicUrlRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^(https|http):\/\/[^\\s\/$.?#].[^\\s]*$/")
    /** The url of the Ezsigntemplatepublic  You can add these value as query parameters to prefill the corresponding role  |Parameter|Description| |-|-| |sEzsigntemplatesignerDescription|The role to fill| |sContactFirstname|The contact firstname| |sContactLastname|The contact lastname| |sEmailAddress|The contact email| |sPhoneE164|The contact phone number| |sPhoneE164Cell|The contact cell phone number| */
    public var sEzsigntemplatepublicUrl: String

    public init(sEzsigntemplatepublicUrl: String) {
        self.sEzsigntemplatepublicUrl = sEzsigntemplatepublicUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sEzsigntemplatepublicUrl
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sEzsigntemplatepublicUrl, forKey: .sEzsigntemplatepublicUrl)
    }
}

