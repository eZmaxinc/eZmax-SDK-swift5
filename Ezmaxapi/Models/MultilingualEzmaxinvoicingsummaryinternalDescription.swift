//
// MultilingualEzmaxinvoicingsummaryinternalDescription.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Description of the Ezmaxinvoicingsummaryinternal */
public struct MultilingualEzmaxinvoicingsummaryinternalDescription: Codable, JSONEncodable, Hashable {

    static let sEzmaxinvoicingsummaryinternalDescription1Rule = StringRule(minLength: nil, maxLength: 70, pattern: nil)
    static let sEzmaxinvoicingsummaryinternalDescription2Rule = StringRule(minLength: nil, maxLength: 70, pattern: nil)
    /** The Ezmaxinvoicingsummaryinternal description in French */
    public var sEzmaxinvoicingsummaryinternalDescription1: String?
    /** The Ezmaxinvoicingsummaryinternal description in English */
    public var sEzmaxinvoicingsummaryinternalDescription2: String?

    public init(sEzmaxinvoicingsummaryinternalDescription1: String? = nil, sEzmaxinvoicingsummaryinternalDescription2: String? = nil) {
        self.sEzmaxinvoicingsummaryinternalDescription1 = sEzmaxinvoicingsummaryinternalDescription1
        self.sEzmaxinvoicingsummaryinternalDescription2 = sEzmaxinvoicingsummaryinternalDescription2
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sEzmaxinvoicingsummaryinternalDescription1
        case sEzmaxinvoicingsummaryinternalDescription2
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sEzmaxinvoicingsummaryinternalDescription1, forKey: .sEzmaxinvoicingsummaryinternalDescription1)
        try container.encodeIfPresent(sEzmaxinvoicingsummaryinternalDescription2, forKey: .sEzmaxinvoicingsummaryinternalDescription2)
    }
}

