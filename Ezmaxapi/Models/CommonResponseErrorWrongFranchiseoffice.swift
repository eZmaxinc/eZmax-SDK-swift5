//
// CommonResponseErrorWrongFranchiseoffice.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Error Message when a Franchisebroker is not in this Franchiseoffice. */
public struct CommonResponseErrorWrongFranchiseoffice: Codable, JSONEncodable, Hashable {

    static let sErrorMessageRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,500}$/")
    static let fkiFranchiseagenceIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 65535, exclusiveMaximum: false, multipleOf: nil)
    static let fkiFranchiseofficeIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** The message giving details about the error */
    public var sErrorMessage: String
    public var eErrorCode: FieldEErrorCode
    /** More error message detail */
    public var aSErrorMessagedetail: [String]?
    /** The unique ID of the Franchiseagence */
    public var fkiFranchiseagenceID: Int
    /** The name of the Franchiseagence */
    public var sFranchiseagenceName: String
    /** The unique ID of the Franchisereoffice */
    public var fkiFranchiseofficeID: Int
    /** The code of the Franchiseoffice */
    public var iFranchiseofficeCode: String

    public init(sErrorMessage: String, eErrorCode: FieldEErrorCode, aSErrorMessagedetail: [String]? = nil, fkiFranchiseagenceID: Int, sFranchiseagenceName: String, fkiFranchiseofficeID: Int, iFranchiseofficeCode: String) {
        self.sErrorMessage = sErrorMessage
        self.eErrorCode = eErrorCode
        self.aSErrorMessagedetail = aSErrorMessagedetail
        self.fkiFranchiseagenceID = fkiFranchiseagenceID
        self.sFranchiseagenceName = sFranchiseagenceName
        self.fkiFranchiseofficeID = fkiFranchiseofficeID
        self.iFranchiseofficeCode = iFranchiseofficeCode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sErrorMessage
        case eErrorCode
        case aSErrorMessagedetail = "a_sErrorMessagedetail"
        case fkiFranchiseagenceID
        case sFranchiseagenceName
        case fkiFranchiseofficeID
        case iFranchiseofficeCode
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sErrorMessage, forKey: .sErrorMessage)
        try container.encode(eErrorCode, forKey: .eErrorCode)
        try container.encodeIfPresent(aSErrorMessagedetail, forKey: .aSErrorMessagedetail)
        try container.encode(fkiFranchiseagenceID, forKey: .fkiFranchiseagenceID)
        try container.encode(sFranchiseagenceName, forKey: .sFranchiseagenceName)
        try container.encode(fkiFranchiseofficeID, forKey: .fkiFranchiseofficeID)
        try container.encode(iFranchiseofficeCode, forKey: .iFranchiseofficeCode)
    }
}

