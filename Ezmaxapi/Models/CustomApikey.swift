//
// CustomApikey.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Custom Apikey Object */
public struct CustomApikey: Codable, JSONEncodable, Hashable {

    public static let sApikeyKeyRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{1,200}$/")
    public static let sApikeySecretRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9a-fA-F]{1,32}$/")
    /** The key of the Apikey */
    public var sApikeyKey: String
    /** The secret of the Apikey */
    public var sApikeySecret: String

    public init(sApikeyKey: String, sApikeySecret: String) {
        self.sApikeyKey = sApikeyKey
        self.sApikeySecret = sApikeySecret
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sApikeyKey
        case sApikeySecret
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sApikeyKey, forKey: .sApikeyKey)
        try container.encode(sApikeySecret, forKey: .sApikeySecret)
    }
}

