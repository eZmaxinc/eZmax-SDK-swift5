//
// CustomApikeyfederation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Custom Apikeyfederation Object */
public struct CustomApikeyfederation: Codable, JSONEncodable, Hashable {

    static let sApikeyfederationKeyRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{1,200}$/")
    static let sApikeyfederationSecretRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9a-fA-F]{1,32}$/")
    /** The key of the Apikeyfederation */
    public var sApikeyfederationKey: String
    /** The secret of the Apikeyfederation */
    public var sApikeyfederationSecret: String

    public init(sApikeyfederationKey: String, sApikeyfederationSecret: String) {
        self.sApikeyfederationKey = sApikeyfederationKey
        self.sApikeyfederationSecret = sApikeyfederationSecret
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sApikeyfederationKey
        case sApikeyfederationSecret
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sApikeyfederationKey, forKey: .sApikeyfederationKey)
        try container.encode(sApikeyfederationSecret, forKey: .sApikeyfederationSecret)
    }
}

