//
// CreditcardclientListElement.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Creditcardclient List Element */
public struct CreditcardclientListElement: Codable, JSONEncodable, Hashable {

    public static let pkiCreditcardclientIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 65535, exclusiveMaximum: false, multipleOf: nil)
    public static let fkiCreditcarddetailIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 65535, exclusiveMaximum: false, multipleOf: nil)
    public static let fkiCreditcardtypeIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 255, exclusiveMaximum: false, multipleOf: nil)
    public static let sCreditcardclientDescriptionRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,50}$/")
    public static let iCreditcarddetailExpirationmonthRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 12, exclusiveMaximum: false, multipleOf: nil)
    public static let iCreditcarddetailExpirationyearRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 2200, exclusiveMaximum: false, multipleOf: nil)
    public static let iCreditcarddetailLastdigitsRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 9999, exclusiveMaximum: false, multipleOf: nil)
    /** The unique ID of the Creditcardclient */
    public var pkiCreditcardclientID: Int
    /** The unique ID of the Creditcarddetail */
    public var fkiCreditcarddetailID: Int
    /** The unique ID of the Creditcardtype */
    public var fkiCreditcardtypeID: Int
    /** Whether if it's the creditcardclient is the default one */
    public var bCreditcardclientrelationIsdefault: Bool
    /** The description of the Creditcardclient */
    public var sCreditcardclientDescription: String
    /** Whether if it's an allowedagencypayment */
    public var bCreditcardclientAllowedcompanypayment: Bool
    /** Whether if it's an allowedtranquillit */
    public var bCreditcardclientAllowedtranquillit: Bool
    /** The expirationmonth of the Creditcarddetail */
    public var iCreditcarddetailExpirationmonth: Int
    /** The expirationyear of the Creditcarddetail */
    public var iCreditcarddetailExpirationyear: Int
    /** The last digits of the Creditcarddetail */
    public var iCreditcarddetailLastdigits: Int

    public init(pkiCreditcardclientID: Int, fkiCreditcarddetailID: Int, fkiCreditcardtypeID: Int, bCreditcardclientrelationIsdefault: Bool, sCreditcardclientDescription: String, bCreditcardclientAllowedcompanypayment: Bool, bCreditcardclientAllowedtranquillit: Bool, iCreditcarddetailExpirationmonth: Int, iCreditcarddetailExpirationyear: Int, iCreditcarddetailLastdigits: Int) {
        self.pkiCreditcardclientID = pkiCreditcardclientID
        self.fkiCreditcarddetailID = fkiCreditcarddetailID
        self.fkiCreditcardtypeID = fkiCreditcardtypeID
        self.bCreditcardclientrelationIsdefault = bCreditcardclientrelationIsdefault
        self.sCreditcardclientDescription = sCreditcardclientDescription
        self.bCreditcardclientAllowedcompanypayment = bCreditcardclientAllowedcompanypayment
        self.bCreditcardclientAllowedtranquillit = bCreditcardclientAllowedtranquillit
        self.iCreditcarddetailExpirationmonth = iCreditcarddetailExpirationmonth
        self.iCreditcarddetailExpirationyear = iCreditcarddetailExpirationyear
        self.iCreditcarddetailLastdigits = iCreditcarddetailLastdigits
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiCreditcardclientID
        case fkiCreditcarddetailID
        case fkiCreditcardtypeID
        case bCreditcardclientrelationIsdefault
        case sCreditcardclientDescription
        case bCreditcardclientAllowedcompanypayment
        case bCreditcardclientAllowedtranquillit
        case iCreditcarddetailExpirationmonth
        case iCreditcarddetailExpirationyear
        case iCreditcarddetailLastdigits
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiCreditcardclientID, forKey: .pkiCreditcardclientID)
        try container.encode(fkiCreditcarddetailID, forKey: .fkiCreditcarddetailID)
        try container.encode(fkiCreditcardtypeID, forKey: .fkiCreditcardtypeID)
        try container.encode(bCreditcardclientrelationIsdefault, forKey: .bCreditcardclientrelationIsdefault)
        try container.encode(sCreditcardclientDescription, forKey: .sCreditcardclientDescription)
        try container.encode(bCreditcardclientAllowedcompanypayment, forKey: .bCreditcardclientAllowedcompanypayment)
        try container.encode(bCreditcardclientAllowedtranquillit, forKey: .bCreditcardclientAllowedtranquillit)
        try container.encode(iCreditcarddetailExpirationmonth, forKey: .iCreditcarddetailExpirationmonth)
        try container.encode(iCreditcarddetailExpirationyear, forKey: .iCreditcarddetailExpirationyear)
        try container.encode(iCreditcarddetailLastdigits, forKey: .iCreditcarddetailLastdigits)
    }
}

