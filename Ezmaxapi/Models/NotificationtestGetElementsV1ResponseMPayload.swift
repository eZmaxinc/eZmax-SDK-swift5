//
// NotificationtestGetElementsV1ResponseMPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Payload for GET /1/object/notificationtest/{pkiNotificationtestID}/getElements */
public struct NotificationtestGetElementsV1ResponseMPayload: Codable, JSONEncodable, Hashable {

    public static let pkiNotificationtestIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** The unique ID of the Notificationtest */
    public var pkiNotificationtestID: Int
    /** The function name of the Notificationtest */
    public var sNotificationtestFunction: String
    public var aSVariableobjectProperty: [String]
    public var aObjVariableobject: [Dictionary]

    public init(pkiNotificationtestID: Int, sNotificationtestFunction: String, aSVariableobjectProperty: [String], aObjVariableobject: [Dictionary]) {
        self.pkiNotificationtestID = pkiNotificationtestID
        self.sNotificationtestFunction = sNotificationtestFunction
        self.aSVariableobjectProperty = aSVariableobjectProperty
        self.aObjVariableobject = aObjVariableobject
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiNotificationtestID
        case sNotificationtestFunction
        case aSVariableobjectProperty = "a_sVariableobjectProperty"
        case aObjVariableobject = "a_objVariableobject"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiNotificationtestID, forKey: .pkiNotificationtestID)
        try container.encode(sNotificationtestFunction, forKey: .sNotificationtestFunction)
        try container.encode(aSVariableobjectProperty, forKey: .aSVariableobjectProperty)
        try container.encode(aObjVariableobject, forKey: .aObjVariableobject)
    }
}

