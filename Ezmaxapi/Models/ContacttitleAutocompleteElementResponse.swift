//
// ContacttitleAutocompleteElementResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Contacttitle AutocompleteElement Response */
public struct ContacttitleAutocompleteElementResponse: Codable, JSONEncodable, Hashable {

    static let pkiContacttitleIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let sContacttitleNameXRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,10}$/")
    /** The unique ID of the Contacttitle.  Valid values:  |Value|Description| |-|-| |1|Ms.| |2|Mr.| |4|(Blank)| |5|Me (For Notaries)| */
    public var pkiContacttitleID: Int
    /** The name of the Contacttitle in the language of the requester */
    public var sContacttitleNameX: String

    public init(pkiContacttitleID: Int, sContacttitleNameX: String) {
        self.pkiContacttitleID = pkiContacttitleID
        self.sContacttitleNameX = sContacttitleNameX
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiContacttitleID
        case sContacttitleNameX
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiContacttitleID, forKey: .pkiContacttitleID)
        try container.encode(sContacttitleNameX, forKey: .sContacttitleNameX)
    }
}

