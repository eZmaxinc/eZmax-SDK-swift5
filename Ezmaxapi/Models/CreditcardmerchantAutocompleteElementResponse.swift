//
// CreditcardmerchantAutocompleteElementResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Creditcardmerchant AutocompleteElement Response */
public struct CreditcardmerchantAutocompleteElementResponse: Codable, JSONEncodable, Hashable {

    public static let pkiCreditcardmerchantIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 255, exclusiveMaximum: false, multipleOf: nil)
    public static let sCreditcardmerchantDescriptionRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,25}$/")
    /** The unique ID of the Creditcardmerchant */
    public var pkiCreditcardmerchantID: Int
    /** The description of the Creditcardmerchant */
    public var sCreditcardmerchantDescription: String
    /** Whether the creditcardmerchant is active or not */
    public var bCreditcardmerchantIsactive: Bool

    public init(pkiCreditcardmerchantID: Int, sCreditcardmerchantDescription: String, bCreditcardmerchantIsactive: Bool) {
        self.pkiCreditcardmerchantID = pkiCreditcardmerchantID
        self.sCreditcardmerchantDescription = sCreditcardmerchantDescription
        self.bCreditcardmerchantIsactive = bCreditcardmerchantIsactive
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiCreditcardmerchantID
        case sCreditcardmerchantDescription
        case bCreditcardmerchantIsactive
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiCreditcardmerchantID, forKey: .pkiCreditcardmerchantID)
        try container.encode(sCreditcardmerchantDescription, forKey: .sCreditcardmerchantDescription)
        try container.encode(bCreditcardmerchantIsactive, forKey: .bCreditcardmerchantIsactive)
    }
}

