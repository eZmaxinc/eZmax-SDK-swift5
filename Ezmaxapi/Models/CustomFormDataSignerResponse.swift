//
// CustomFormDataSignerResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A form Data Signer Object */
public struct CustomFormDataSignerResponse: Codable, JSONEncodable, Hashable {

    public static let fkiEzsignfoldersignerassociationIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public static let fkiUserIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public static let sContactFirstnameRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{1,20}$/")
    public static let sContactLastnameRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{1,25}$/")
    public static let aObjEzsignformfieldgroupRule = ArrayRule(minItems: nil, maxItems: nil, uniqueItems: false)
    /** The unique ID of the Ezsignfoldersignerassociation */
    public var fkiEzsignfoldersignerassociationID: Int
    /** The unique ID of the User */
    public var fkiUserID: Int?
    /** The First name of the contact */
    public var sContactFirstname: String
    /** The Last name of the contact */
    public var sContactLastname: String
    public var aObjEzsignformfieldgroup: [CustomFormDataEzsignformfieldgroupResponse]

    public init(fkiEzsignfoldersignerassociationID: Int, fkiUserID: Int? = nil, sContactFirstname: String, sContactLastname: String, aObjEzsignformfieldgroup: [CustomFormDataEzsignformfieldgroupResponse]) {
        self.fkiEzsignfoldersignerassociationID = fkiEzsignfoldersignerassociationID
        self.fkiUserID = fkiUserID
        self.sContactFirstname = sContactFirstname
        self.sContactLastname = sContactLastname
        self.aObjEzsignformfieldgroup = aObjEzsignformfieldgroup
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fkiEzsignfoldersignerassociationID
        case fkiUserID
        case sContactFirstname
        case sContactLastname
        case aObjEzsignformfieldgroup = "a_objEzsignformfieldgroup"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(fkiEzsignfoldersignerassociationID, forKey: .fkiEzsignfoldersignerassociationID)
        try container.encodeIfPresent(fkiUserID, forKey: .fkiUserID)
        try container.encode(sContactFirstname, forKey: .sContactFirstname)
        try container.encode(sContactLastname, forKey: .sContactLastname)
        try container.encode(aObjEzsignformfieldgroup, forKey: .aObjEzsignformfieldgroup)
    }
}

