//
// DiscussionmessageRequestPatch.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Discussionmessage Object */
public struct DiscussionmessageRequestPatch: Codable, JSONEncodable, Hashable {

    static let fkiDiscussionmembershipIDActionrequiredRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 16777215, exclusiveMaximum: false, multipleOf: nil)
    static let tDiscussionmessageContentRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,65535}$/")
    /** The unique ID of the Discussionmembership */
    public var fkiDiscussionmembershipIDActionrequired: Int?
    /** The content of the Discussionmessage */
    public var tDiscussionmessageContent: String?

    public init(fkiDiscussionmembershipIDActionrequired: Int? = nil, tDiscussionmessageContent: String? = nil) {
        self.fkiDiscussionmembershipIDActionrequired = fkiDiscussionmembershipIDActionrequired
        self.tDiscussionmessageContent = tDiscussionmessageContent
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fkiDiscussionmembershipIDActionrequired
        case tDiscussionmessageContent
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(fkiDiscussionmembershipIDActionrequired, forKey: .fkiDiscussionmembershipIDActionrequired)
        try container.encodeIfPresent(tDiscussionmessageContent, forKey: .tDiscussionmessageContent)
    }
}

