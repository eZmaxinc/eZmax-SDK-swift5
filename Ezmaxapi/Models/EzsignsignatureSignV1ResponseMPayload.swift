//
// EzsignsignatureSignV1ResponseMPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Response for POST /1/object/ezsignsignature/{pkiEzsignsignatureID}/sign */
public struct EzsignsignatureSignV1ResponseMPayload: Codable, JSONEncodable, Hashable {

    static let dtEzsignsignatureDateInFolderTimezoneRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/")
    /** The date the Ezsignsignature was signed in folder's timezone */
    public var dtEzsignsignatureDateInFolderTimezone: String
    public var objTimezone: CustomTimezoneWithCodeResponse?

    public init(dtEzsignsignatureDateInFolderTimezone: String, objTimezone: CustomTimezoneWithCodeResponse? = nil) {
        self.dtEzsignsignatureDateInFolderTimezone = dtEzsignsignatureDateInFolderTimezone
        self.objTimezone = objTimezone
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case dtEzsignsignatureDateInFolderTimezone
        case objTimezone
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(dtEzsignsignatureDateInFolderTimezone, forKey: .dtEzsignsignatureDateInFolderTimezone)
        try container.encodeIfPresent(objTimezone, forKey: .objTimezone)
    }
}

