//
// LanguageAutocompleteElementResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Language AutocompleteElement Response */
public struct LanguageAutocompleteElementResponse: Codable, JSONEncodable, Hashable {

    public static let pkiLanguageIDRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: 2, exclusiveMaximum: false, multipleOf: nil)
    /** The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English| */
    public var pkiLanguageID: Int
    /** The Name of the Language in the language of the requester */
    public var sLanguageNameX: String
    /** Whether the Language is active or not */
    public var bLanguageIsactive: Bool

    public init(pkiLanguageID: Int, sLanguageNameX: String, bLanguageIsactive: Bool) {
        self.pkiLanguageID = pkiLanguageID
        self.sLanguageNameX = sLanguageNameX
        self.bLanguageIsactive = bLanguageIsactive
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiLanguageID
        case sLanguageNameX
        case bLanguageIsactive
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiLanguageID, forKey: .pkiLanguageID)
        try container.encode(sLanguageNameX, forKey: .sLanguageNameX)
        try container.encode(bLanguageIsactive, forKey: .bLanguageIsactive)
    }
}

