//
// MultilingualBillingentityinternalDescription.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The description of the Billingentityinternal */
public struct MultilingualBillingentityinternalDescription: Codable, JSONEncodable, Hashable {

    static let sBillingentityinternalDescription1Rule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,70}$/")
    static let sBillingentityinternalDescription2Rule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,70}$/")
    /** The description of the Billingentityinternal in French */
    public var sBillingentityinternalDescription1: String?
    /** The description of the Billingentityinternal in English */
    public var sBillingentityinternalDescription2: String?

    public init(sBillingentityinternalDescription1: String? = nil, sBillingentityinternalDescription2: String? = nil) {
        self.sBillingentityinternalDescription1 = sBillingentityinternalDescription1
        self.sBillingentityinternalDescription2 = sBillingentityinternalDescription2
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sBillingentityinternalDescription1
        case sBillingentityinternalDescription2
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sBillingentityinternalDescription1, forKey: .sBillingentityinternalDescription1)
        try container.encodeIfPresent(sBillingentityinternalDescription2, forKey: .sBillingentityinternalDescription2)
    }
}

