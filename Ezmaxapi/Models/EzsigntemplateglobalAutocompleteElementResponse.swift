//
// EzsigntemplateglobalAutocompleteElementResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Ezsigntemplate AutocompleteElement Response */
public struct EzsigntemplateglobalAutocompleteElementResponse: Codable, JSONEncodable, Hashable {

    public static let pkiEzsigntemplateglobalIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** The unique ID of the Ezsigntemplateglobal */
    public var pkiEzsigntemplateglobalID: Int
    /** The description of the Ezsigntemplate */
    public var sEzsigntemplateglobalDescription: String
    /** Whether the Ezsigntemplate is active or not */
    public var bEzsigntemplateglobalIsactive: Bool

    public init(pkiEzsigntemplateglobalID: Int, sEzsigntemplateglobalDescription: String, bEzsigntemplateglobalIsactive: Bool) {
        self.pkiEzsigntemplateglobalID = pkiEzsigntemplateglobalID
        self.sEzsigntemplateglobalDescription = sEzsigntemplateglobalDescription
        self.bEzsigntemplateglobalIsactive = bEzsigntemplateglobalIsactive
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsigntemplateglobalID
        case sEzsigntemplateglobalDescription
        case bEzsigntemplateglobalIsactive
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiEzsigntemplateglobalID, forKey: .pkiEzsigntemplateglobalID)
        try container.encode(sEzsigntemplateglobalDescription, forKey: .sEzsigntemplateglobalDescription)
        try container.encode(bEzsigntemplateglobalIsactive, forKey: .bEzsigntemplateglobalIsactive)
    }
}

