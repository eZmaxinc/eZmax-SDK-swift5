//
// EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Payload for POST /1/object/ezsignfoldersignerassociation/createEmbeddedUrl */
public struct EzsignfoldersignerassociationCreateEmbeddedUrlV1ResponseMPayload: Codable, JSONEncodable, Hashable {

    /** The embedded Url to the signing application.    Url will expire after 5 minutes.   */
    public var sEmbeddedUrl: String

    public init(sEmbeddedUrl: String) {
        self.sEmbeddedUrl = sEmbeddedUrl
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sEmbeddedUrl
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sEmbeddedUrl, forKey: .sEmbeddedUrl)
    }
}

