//
// EzsigntemplateelementdependencyRequestCompound.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An Ezsigntemplateelementdependency Object and children to create a complete structure */
public struct EzsigntemplateelementdependencyRequestCompound: Codable, JSONEncodable, Hashable {

    static let pkiEzsigntemplateelementdependencyIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 65535, exclusiveMaximum: false, multipleOf: nil)
    static let fkiEzsigntemplateformfieldIDValidationRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let fkiEzsigntemplateformfieldgroupIDValidationRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    static let sEzsigntemplateelementdependencyEzsigntemplateformfieldgrouplabelRule = StringRule(minLength: 1, maxLength: 50, pattern: nil)
    static let sEzsigntemplateelementdependencyValueRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,50}$/")
    /** The unique ID of the Ezsigntemplateelementdependency */
    public var pkiEzsigntemplateelementdependencyID: Int?
    /** The unique ID of the Ezsigntemplateformfield */
    public var fkiEzsigntemplateformfieldIDValidation: Int?
    /** The unique ID of the Ezsigntemplateformfieldgroup */
    public var fkiEzsigntemplateformfieldgroupIDValidation: Int?
    /** The Label for the Ezsigntemplateformfieldgroup */
    public var sEzsigntemplateelementdependencyEzsigntemplateformfieldgrouplabel: String?
    /** The Label for the Ezsigntemplateformfield */
    public var sEzsigntemplateelementdependencyEzsigntemplateformfieldlabel: String?
    public var eEzsigntemplateelementdependencyValidation: FieldEEzsigntemplateelementdependencyValidation
    /** Whether if it's selected or not when using eEzsigntemplateelementdependencyValidation = Selected */
    public var bEzsigntemplateelementdependencySelected: Bool?
    public var eEzsigntemplateelementdependencyOperator: FieldEEzsigntemplateelementdependencyOperator?
    /** The value of the Ezsignelementdependency */
    public var sEzsigntemplateelementdependencyValue: String?

    public init(pkiEzsigntemplateelementdependencyID: Int? = nil, fkiEzsigntemplateformfieldIDValidation: Int? = nil, fkiEzsigntemplateformfieldgroupIDValidation: Int? = nil, sEzsigntemplateelementdependencyEzsigntemplateformfieldgrouplabel: String? = nil, sEzsigntemplateelementdependencyEzsigntemplateformfieldlabel: String? = nil, eEzsigntemplateelementdependencyValidation: FieldEEzsigntemplateelementdependencyValidation, bEzsigntemplateelementdependencySelected: Bool? = nil, eEzsigntemplateelementdependencyOperator: FieldEEzsigntemplateelementdependencyOperator? = nil, sEzsigntemplateelementdependencyValue: String? = nil) {
        self.pkiEzsigntemplateelementdependencyID = pkiEzsigntemplateelementdependencyID
        self.fkiEzsigntemplateformfieldIDValidation = fkiEzsigntemplateformfieldIDValidation
        self.fkiEzsigntemplateformfieldgroupIDValidation = fkiEzsigntemplateformfieldgroupIDValidation
        self.sEzsigntemplateelementdependencyEzsigntemplateformfieldgrouplabel = sEzsigntemplateelementdependencyEzsigntemplateformfieldgrouplabel
        self.sEzsigntemplateelementdependencyEzsigntemplateformfieldlabel = sEzsigntemplateelementdependencyEzsigntemplateformfieldlabel
        self.eEzsigntemplateelementdependencyValidation = eEzsigntemplateelementdependencyValidation
        self.bEzsigntemplateelementdependencySelected = bEzsigntemplateelementdependencySelected
        self.eEzsigntemplateelementdependencyOperator = eEzsigntemplateelementdependencyOperator
        self.sEzsigntemplateelementdependencyValue = sEzsigntemplateelementdependencyValue
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsigntemplateelementdependencyID
        case fkiEzsigntemplateformfieldIDValidation
        case fkiEzsigntemplateformfieldgroupIDValidation
        case sEzsigntemplateelementdependencyEzsigntemplateformfieldgrouplabel
        case sEzsigntemplateelementdependencyEzsigntemplateformfieldlabel
        case eEzsigntemplateelementdependencyValidation
        case bEzsigntemplateelementdependencySelected
        case eEzsigntemplateelementdependencyOperator
        case sEzsigntemplateelementdependencyValue
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(pkiEzsigntemplateelementdependencyID, forKey: .pkiEzsigntemplateelementdependencyID)
        try container.encodeIfPresent(fkiEzsigntemplateformfieldIDValidation, forKey: .fkiEzsigntemplateformfieldIDValidation)
        try container.encodeIfPresent(fkiEzsigntemplateformfieldgroupIDValidation, forKey: .fkiEzsigntemplateformfieldgroupIDValidation)
        try container.encodeIfPresent(sEzsigntemplateelementdependencyEzsigntemplateformfieldgrouplabel, forKey: .sEzsigntemplateelementdependencyEzsigntemplateformfieldgrouplabel)
        try container.encodeIfPresent(sEzsigntemplateelementdependencyEzsigntemplateformfieldlabel, forKey: .sEzsigntemplateelementdependencyEzsigntemplateformfieldlabel)
        try container.encode(eEzsigntemplateelementdependencyValidation, forKey: .eEzsigntemplateelementdependencyValidation)
        try container.encodeIfPresent(bEzsigntemplateelementdependencySelected, forKey: .bEzsigntemplateelementdependencySelected)
        try container.encodeIfPresent(eEzsigntemplateelementdependencyOperator, forKey: .eEzsigntemplateelementdependencyOperator)
        try container.encodeIfPresent(sEzsigntemplateelementdependencyValue, forKey: .sEzsigntemplateelementdependencyValue)
    }
}

