//
// ModuleResponseCompound.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Module Object */
public struct ModuleResponseCompound: Codable, JSONEncodable, Hashable {

    public static let pkiModuleIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    public static let fkiModulegroupIDRule = NumericRule<Int>(minimum: 1, exclusiveMinimum: false, maximum: 255, exclusiveMaximum: false, multipleOf: nil)
    /** The unique ID of the Module */
    public var pkiModuleID: Int
    /** The unique ID of the Modulegroup */
    public var fkiModulegroupID: Int
    /** The Internal name of the Module.  This is theoretically an enum field but there are so many possibles values we decided not to list them all. */
    public var eModuleInternalname: String
    /** The Name of the Module in the language of the requester */
    public var sModuleNameX: String
    /** Whether the Module is registered or not */
    public var bModuleRegistered: Bool
    /** Whether the Module is registered or not for api use */
    public var bModuleRegisteredapi: Bool
    public var aObjModulesection: [ModulesectionResponseCompound]?

    public init(pkiModuleID: Int, fkiModulegroupID: Int, eModuleInternalname: String, sModuleNameX: String, bModuleRegistered: Bool, bModuleRegisteredapi: Bool, aObjModulesection: [ModulesectionResponseCompound]? = nil) {
        self.pkiModuleID = pkiModuleID
        self.fkiModulegroupID = fkiModulegroupID
        self.eModuleInternalname = eModuleInternalname
        self.sModuleNameX = sModuleNameX
        self.bModuleRegistered = bModuleRegistered
        self.bModuleRegisteredapi = bModuleRegisteredapi
        self.aObjModulesection = aObjModulesection
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiModuleID
        case fkiModulegroupID
        case eModuleInternalname
        case sModuleNameX
        case bModuleRegistered
        case bModuleRegisteredapi
        case aObjModulesection = "a_objModulesection"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiModuleID, forKey: .pkiModuleID)
        try container.encode(fkiModulegroupID, forKey: .fkiModulegroupID)
        try container.encode(eModuleInternalname, forKey: .eModuleInternalname)
        try container.encode(sModuleNameX, forKey: .sModuleNameX)
        try container.encode(bModuleRegistered, forKey: .bModuleRegistered)
        try container.encode(bModuleRegisteredapi, forKey: .bModuleRegisteredapi)
        try container.encodeIfPresent(aObjModulesection, forKey: .aObjModulesection)
    }
}

