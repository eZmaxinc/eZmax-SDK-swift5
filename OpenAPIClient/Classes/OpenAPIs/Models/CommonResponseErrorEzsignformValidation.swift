//
// CommonResponseErrorEzsignformValidation.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Generic Error Message */
public struct CommonResponseErrorEzsignformValidation: Codable, JSONEncodable, Hashable {

    static let sErrorMessageRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,500}$/")
    /**  */
    public var aObjEzsignformfielderror: [CustomEzsignformfielderrorResponse]
    /** The message giving details about the error */
    public var sErrorMessage: String
    public var eErrorCode: FieldEErrorCode

    public init(aObjEzsignformfielderror: [CustomEzsignformfielderrorResponse], sErrorMessage: String, eErrorCode: FieldEErrorCode) {
        self.aObjEzsignformfielderror = aObjEzsignformfielderror
        self.sErrorMessage = sErrorMessage
        self.eErrorCode = eErrorCode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case aObjEzsignformfielderror = "a_objEzsignformfielderror"
        case sErrorMessage
        case eErrorCode
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(aObjEzsignformfielderror, forKey: .aObjEzsignformfielderror)
        try container.encode(sErrorMessage, forKey: .sErrorMessage)
        try container.encode(eErrorCode, forKey: .eErrorCode)
    }
}

