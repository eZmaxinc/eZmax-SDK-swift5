//
// ScimGroup.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ScimGroup: Codable, JSONEncodable, Hashable {

    static let displayNameRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,50}$/")
    public var id: String?
    /** The Name of the Usergroup in the language of the requester */
    public var displayName: String
    public var members: [ScimGroupMember]?

    public init(id: String? = nil, displayName: String, members: [ScimGroupMember]? = nil) {
        self.id = id
        self.displayName = displayName
        self.members = members
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case displayName
        case members
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(id, forKey: .id)
        try container.encode(displayName, forKey: .displayName)
        try container.encodeIfPresent(members, forKey: .members)
    }
}

