//
// CommunicationexternalrecipientResponseCompound.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Communicationexternalrecipient Object */
public struct CommunicationexternalrecipientResponseCompound: Codable, JSONEncodable, Hashable {

    /** The unique ID of the Communicationexternalrecipient */
    public var pkiCommunicationexternalrecipientID: Int
    public var eCommunicationexternalrecipientType: FieldECommunicationexternalrecipientType
    public var objDescriptionstatic: DescriptionstaticResponseCompound
    public var objEmailstatic: EmailstaticResponseCompound?
    public var objPhonestatic: PhonestaticResponseCompound?

    public init(pkiCommunicationexternalrecipientID: Int, eCommunicationexternalrecipientType: FieldECommunicationexternalrecipientType, objDescriptionstatic: DescriptionstaticResponseCompound, objEmailstatic: EmailstaticResponseCompound? = nil, objPhonestatic: PhonestaticResponseCompound? = nil) {
        self.pkiCommunicationexternalrecipientID = pkiCommunicationexternalrecipientID
        self.eCommunicationexternalrecipientType = eCommunicationexternalrecipientType
        self.objDescriptionstatic = objDescriptionstatic
        self.objEmailstatic = objEmailstatic
        self.objPhonestatic = objPhonestatic
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiCommunicationexternalrecipientID
        case eCommunicationexternalrecipientType
        case objDescriptionstatic
        case objEmailstatic
        case objPhonestatic
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiCommunicationexternalrecipientID, forKey: .pkiCommunicationexternalrecipientID)
        try container.encode(eCommunicationexternalrecipientType, forKey: .eCommunicationexternalrecipientType)
        try container.encode(objDescriptionstatic, forKey: .objDescriptionstatic)
        try container.encodeIfPresent(objEmailstatic, forKey: .objEmailstatic)
        try container.encodeIfPresent(objPhonestatic, forKey: .objPhonestatic)
    }
}

