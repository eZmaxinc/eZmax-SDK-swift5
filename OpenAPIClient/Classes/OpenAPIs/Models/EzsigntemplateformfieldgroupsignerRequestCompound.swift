//
// EzsigntemplateformfieldgroupsignerRequestCompound.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An Ezsigntemplateformfieldgroupsigner Object and children to create a complete structure */
public struct EzsigntemplateformfieldgroupsignerRequestCompound: Codable, JSONEncodable, Hashable {

    /** The unique ID of the Ezsigntemplateformfieldgroupsigner */
    public var pkiEzsigntemplateformfieldgroupsignerID: Int?
    /** The unique ID of the Ezsigntemplatesigner */
    public var fkiEzsigntemplatesignerID: Int

    public init(pkiEzsigntemplateformfieldgroupsignerID: Int? = nil, fkiEzsigntemplatesignerID: Int) {
        self.pkiEzsigntemplateformfieldgroupsignerID = pkiEzsigntemplateformfieldgroupsignerID
        self.fkiEzsigntemplatesignerID = fkiEzsigntemplatesignerID
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsigntemplateformfieldgroupsignerID
        case fkiEzsigntemplatesignerID
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(pkiEzsigntemplateformfieldgroupsignerID, forKey: .pkiEzsigntemplateformfieldgroupsignerID)
        try container.encode(fkiEzsigntemplatesignerID, forKey: .fkiEzsigntemplatesignerID)
    }
}

