//
// EzsigndocumentGetObjectV1ResponseMPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Payload for the /1/object/ezsigndocument/getObject API Request */
public struct EzsigndocumentGetObjectV1ResponseMPayload: Codable, JSONEncodable, Hashable {

    /** The total number of steps in the form filling phase */
    public var iEzsigndocumentStepformtotal: Int
    /** The current step in the form filling phase */
    public var iEzsigndocumentStepformcurrent: Int
    /** The total number of steps in the signature filling phase */
    public var iEzsigndocumentStepsignaturetotal: Int
    /** The current step in the signature phase */
    public var iEzsigndocumentStepsignatureCurrent: Int
    public var aObjEzsignfoldersignerassociationstatus: [CustomEzsignfoldersignerassociationstatusResponse]
    /** The unique ID of the Ezsignfolder */
    public var fkiEzsignfolderID: Int
    /** The maximum date and time at which the Ezsigndocument can be signed. */
    public var dtEzsigndocumentDuedate: String
    /** The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English| */
    public var fkiLanguageID: Int
    /** The name of the document that will be presented to Ezsignfoldersignerassociations */
    public var sEzsigndocumentName: String
    /** The unique ID of the Ezsigndocument */
    public var pkiEzsigndocumentID: Int
    public var eEzsigndocumentStep: FieldEEzsigndocumentStep
    /** The date and time when the Ezsigndocument was first sent. */
    public var dtEzsigndocumentFirstsend: String
    /** The date and time when the Ezsigndocument was sent the last time. */
    public var dtEzsigndocumentLastsend: String
    /** The order in which the Ezsigndocument will be presented to the signatory in the Ezsignfolder. */
    public var iEzsigndocumentOrder: Int
    /** The number of pages in the Ezsigndocument. */
    public var iEzsigndocumentPagetotal: Int
    /** The number of signatures that were signed in the document. */
    public var iEzsigndocumentSignaturesigned: Int
    /** The number of total signatures that were requested in the Ezsigndocument. */
    public var iEzsigndocumentSignaturetotal: Int
    /** MD5 Hash of the initial PDF Document before signatures were applied to it. */
    public var sEzsigndocumentMD5initial: String
    /** MD5 Hash of the final PDF Document after all signatures were applied to it. */
    public var sEzsigndocumentMD5signed: String
    public var objAudit: CommonAudit

    public init(iEzsigndocumentStepformtotal: Int, iEzsigndocumentStepformcurrent: Int, iEzsigndocumentStepsignaturetotal: Int, iEzsigndocumentStepsignatureCurrent: Int, aObjEzsignfoldersignerassociationstatus: [CustomEzsignfoldersignerassociationstatusResponse], fkiEzsignfolderID: Int, dtEzsigndocumentDuedate: String, fkiLanguageID: Int, sEzsigndocumentName: String, pkiEzsigndocumentID: Int, eEzsigndocumentStep: FieldEEzsigndocumentStep, dtEzsigndocumentFirstsend: String, dtEzsigndocumentLastsend: String, iEzsigndocumentOrder: Int, iEzsigndocumentPagetotal: Int, iEzsigndocumentSignaturesigned: Int, iEzsigndocumentSignaturetotal: Int, sEzsigndocumentMD5initial: String, sEzsigndocumentMD5signed: String, objAudit: CommonAudit) {
        self.iEzsigndocumentStepformtotal = iEzsigndocumentStepformtotal
        self.iEzsigndocumentStepformcurrent = iEzsigndocumentStepformcurrent
        self.iEzsigndocumentStepsignaturetotal = iEzsigndocumentStepsignaturetotal
        self.iEzsigndocumentStepsignatureCurrent = iEzsigndocumentStepsignatureCurrent
        self.aObjEzsignfoldersignerassociationstatus = aObjEzsignfoldersignerassociationstatus
        self.fkiEzsignfolderID = fkiEzsignfolderID
        self.dtEzsigndocumentDuedate = dtEzsigndocumentDuedate
        self.fkiLanguageID = fkiLanguageID
        self.sEzsigndocumentName = sEzsigndocumentName
        self.pkiEzsigndocumentID = pkiEzsigndocumentID
        self.eEzsigndocumentStep = eEzsigndocumentStep
        self.dtEzsigndocumentFirstsend = dtEzsigndocumentFirstsend
        self.dtEzsigndocumentLastsend = dtEzsigndocumentLastsend
        self.iEzsigndocumentOrder = iEzsigndocumentOrder
        self.iEzsigndocumentPagetotal = iEzsigndocumentPagetotal
        self.iEzsigndocumentSignaturesigned = iEzsigndocumentSignaturesigned
        self.iEzsigndocumentSignaturetotal = iEzsigndocumentSignaturetotal
        self.sEzsigndocumentMD5initial = sEzsigndocumentMD5initial
        self.sEzsigndocumentMD5signed = sEzsigndocumentMD5signed
        self.objAudit = objAudit
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case iEzsigndocumentStepformtotal
        case iEzsigndocumentStepformcurrent
        case iEzsigndocumentStepsignaturetotal
        case iEzsigndocumentStepsignatureCurrent
        case aObjEzsignfoldersignerassociationstatus = "a_objEzsignfoldersignerassociationstatus"
        case fkiEzsignfolderID
        case dtEzsigndocumentDuedate
        case fkiLanguageID
        case sEzsigndocumentName
        case pkiEzsigndocumentID
        case eEzsigndocumentStep
        case dtEzsigndocumentFirstsend
        case dtEzsigndocumentLastsend
        case iEzsigndocumentOrder
        case iEzsigndocumentPagetotal
        case iEzsigndocumentSignaturesigned
        case iEzsigndocumentSignaturetotal
        case sEzsigndocumentMD5initial
        case sEzsigndocumentMD5signed
        case objAudit
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(iEzsigndocumentStepformtotal, forKey: .iEzsigndocumentStepformtotal)
        try container.encode(iEzsigndocumentStepformcurrent, forKey: .iEzsigndocumentStepformcurrent)
        try container.encode(iEzsigndocumentStepsignaturetotal, forKey: .iEzsigndocumentStepsignaturetotal)
        try container.encode(iEzsigndocumentStepsignatureCurrent, forKey: .iEzsigndocumentStepsignatureCurrent)
        try container.encode(aObjEzsignfoldersignerassociationstatus, forKey: .aObjEzsignfoldersignerassociationstatus)
        try container.encode(fkiEzsignfolderID, forKey: .fkiEzsignfolderID)
        try container.encode(dtEzsigndocumentDuedate, forKey: .dtEzsigndocumentDuedate)
        try container.encode(fkiLanguageID, forKey: .fkiLanguageID)
        try container.encode(sEzsigndocumentName, forKey: .sEzsigndocumentName)
        try container.encode(pkiEzsigndocumentID, forKey: .pkiEzsigndocumentID)
        try container.encode(eEzsigndocumentStep, forKey: .eEzsigndocumentStep)
        try container.encode(dtEzsigndocumentFirstsend, forKey: .dtEzsigndocumentFirstsend)
        try container.encode(dtEzsigndocumentLastsend, forKey: .dtEzsigndocumentLastsend)
        try container.encode(iEzsigndocumentOrder, forKey: .iEzsigndocumentOrder)
        try container.encode(iEzsigndocumentPagetotal, forKey: .iEzsigndocumentPagetotal)
        try container.encode(iEzsigndocumentSignaturesigned, forKey: .iEzsigndocumentSignaturesigned)
        try container.encode(iEzsigndocumentSignaturetotal, forKey: .iEzsigndocumentSignaturetotal)
        try container.encode(sEzsigndocumentMD5initial, forKey: .sEzsigndocumentMD5initial)
        try container.encode(sEzsigndocumentMD5signed, forKey: .sEzsigndocumentMD5signed)
        try container.encode(objAudit, forKey: .objAudit)
    }
}

