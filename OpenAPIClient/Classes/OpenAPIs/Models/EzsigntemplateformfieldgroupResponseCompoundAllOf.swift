//
// EzsigntemplateformfieldgroupResponseCompoundAllOf.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct EzsigntemplateformfieldgroupResponseCompoundAllOf: Codable, JSONEncodable, Hashable {

    public var aObjEzsigntemplateformfieldgroupsigner: [EzsigntemplateformfieldgroupsignerResponseCompound]
    public var aObjDropdownElement: [CustomDropdownElementResponseCompound]?
    public var aObjEzsigntemplateformfield: [EzsigntemplateformfieldResponseCompound]

    public init(aObjEzsigntemplateformfieldgroupsigner: [EzsigntemplateformfieldgroupsignerResponseCompound], aObjDropdownElement: [CustomDropdownElementResponseCompound]? = nil, aObjEzsigntemplateformfield: [EzsigntemplateformfieldResponseCompound]) {
        self.aObjEzsigntemplateformfieldgroupsigner = aObjEzsigntemplateformfieldgroupsigner
        self.aObjDropdownElement = aObjDropdownElement
        self.aObjEzsigntemplateformfield = aObjEzsigntemplateformfield
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case aObjEzsigntemplateformfieldgroupsigner = "a_objEzsigntemplateformfieldgroupsigner"
        case aObjDropdownElement = "a_objDropdownElement"
        case aObjEzsigntemplateformfield = "a_objEzsigntemplateformfield"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(aObjEzsigntemplateformfieldgroupsigner, forKey: .aObjEzsigntemplateformfieldgroupsigner)
        try container.encodeIfPresent(aObjDropdownElement, forKey: .aObjDropdownElement)
        try container.encode(aObjEzsigntemplateformfield, forKey: .aObjEzsigntemplateformfield)
    }
}

