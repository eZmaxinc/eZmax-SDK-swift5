//
// MultilingualApikeyDescription.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Description of the API Key   */
public struct MultilingualApikeyDescription: Codable, JSONEncodable, Hashable {

    /** Value in French */
    public var sApikeyDescription1: String?
    /** Value in English */
    public var sApikeyDescription2: String?

    public init(sApikeyDescription1: String? = nil, sApikeyDescription2: String? = nil) {
        self.sApikeyDescription1 = sApikeyDescription1
        self.sApikeyDescription2 = sApikeyDescription2
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sApikeyDescription1
        case sApikeyDescription2
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sApikeyDescription1, forKey: .sApikeyDescription1)
        try container.encodeIfPresent(sApikeyDescription2, forKey: .sApikeyDescription2)
    }
}

