//
// CustomEzsignfoldersignerassociationstatusResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Ezsignfoldersignerassociationstatus Object and children to create a complete structure */
public struct CustomEzsignfoldersignerassociationstatusResponse: Codable, JSONEncodable, Hashable {

    /** The unique ID of the Ezsignfoldersignerassociation */
    public var fkiEzsignfoldersignerassociationID: Int
    /** The last name of the Ezsignsigner */
    public var sEzsignfoldersignerassociationstatusLastname: String
    /** The first name of the Ezsignsigner */
    public var sEzsignfoldersignerassociationstatusFirstname: String
    public var aObjEzsignsignaturestatus: [CustomEzsignsignaturestatusResponse]

    public init(fkiEzsignfoldersignerassociationID: Int, sEzsignfoldersignerassociationstatusLastname: String, sEzsignfoldersignerassociationstatusFirstname: String, aObjEzsignsignaturestatus: [CustomEzsignsignaturestatusResponse]) {
        self.fkiEzsignfoldersignerassociationID = fkiEzsignfoldersignerassociationID
        self.sEzsignfoldersignerassociationstatusLastname = sEzsignfoldersignerassociationstatusLastname
        self.sEzsignfoldersignerassociationstatusFirstname = sEzsignfoldersignerassociationstatusFirstname
        self.aObjEzsignsignaturestatus = aObjEzsignsignaturestatus
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fkiEzsignfoldersignerassociationID
        case sEzsignfoldersignerassociationstatusLastname
        case sEzsignfoldersignerassociationstatusFirstname
        case aObjEzsignsignaturestatus = "a_objEzsignsignaturestatus"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(fkiEzsignfoldersignerassociationID, forKey: .fkiEzsignfoldersignerassociationID)
        try container.encode(sEzsignfoldersignerassociationstatusLastname, forKey: .sEzsignfoldersignerassociationstatusLastname)
        try container.encode(sEzsignfoldersignerassociationstatusFirstname, forKey: .sEzsignfoldersignerassociationstatusFirstname)
        try container.encode(aObjEzsignsignaturestatus, forKey: .aObjEzsignsignaturestatus)
    }
}

