//
// EzsigndocumentRequestPatch.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An Ezsigndocument Object */
public struct EzsigndocumentRequestPatch: Codable, JSONEncodable, Hashable {

    /** The maximum date and time at which the Ezsigndocument can be signed. */
    public var dtEzsigndocumentDuedate: String?
    /** The name of the document that will be presented to Ezsignfoldersignerassociations */
    public var sEzsigndocumentName: String?

    public init(dtEzsigndocumentDuedate: String? = nil, sEzsigndocumentName: String? = nil) {
        self.dtEzsigndocumentDuedate = dtEzsigndocumentDuedate
        self.sEzsigndocumentName = sEzsigndocumentName
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case dtEzsigndocumentDuedate
        case sEzsigndocumentName
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(dtEzsigndocumentDuedate, forKey: .dtEzsigndocumentDuedate)
        try container.encodeIfPresent(sEzsigndocumentName, forKey: .sEzsigndocumentName)
    }
}

