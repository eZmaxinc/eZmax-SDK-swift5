//
// MultilingualNotificationtestName.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Name of the Notificationtest */
public struct MultilingualNotificationtestName: Codable, JSONEncodable, Hashable {

    /** The name of the Notificationtest in French */
    public var sNotificationtestName1: String?
    /** The name of the Notificationtest in English */
    public var sNotificationtestName2: String?

    public init(sNotificationtestName1: String? = nil, sNotificationtestName2: String? = nil) {
        self.sNotificationtestName1 = sNotificationtestName1
        self.sNotificationtestName2 = sNotificationtestName2
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sNotificationtestName1
        case sNotificationtestName2
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sNotificationtestName1, forKey: .sNotificationtestName1)
        try container.encodeIfPresent(sNotificationtestName2, forKey: .sNotificationtestName2)
    }
}

