//
// EzsignbulksendGetObjectV1ResponseMPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Payload for the /1/object/ezsignbulksend/{pkiEzsignbulksendID}/getObject API Request */
public struct EzsignbulksendGetObjectV1ResponseMPayload: Codable, JSONEncodable, Hashable {

    /** The unique ID of the Ezsignbulksend */
    public var pkiEzsignbulksendID: Int
    /** The unique ID of the Ezsignfoldertype. */
    public var fkiEzsignfoldertypeID: Int
    /** The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English| */
    public var fkiLanguageID: Int
    /** The description of the Ezsignbulksend */
    public var sEzsignbulksendDescription: String
    /** Note about the Ezsignbulksend */
    public var tEzsignbulksendNote: String
    /** Whether the Ezsignbulksend is active or not */
    public var bEzsignbulksendIsactive: Bool
    public var objAudit: CommonAudit

    public init(pkiEzsignbulksendID: Int, fkiEzsignfoldertypeID: Int, fkiLanguageID: Int, sEzsignbulksendDescription: String, tEzsignbulksendNote: String, bEzsignbulksendIsactive: Bool, objAudit: CommonAudit) {
        self.pkiEzsignbulksendID = pkiEzsignbulksendID
        self.fkiEzsignfoldertypeID = fkiEzsignfoldertypeID
        self.fkiLanguageID = fkiLanguageID
        self.sEzsignbulksendDescription = sEzsignbulksendDescription
        self.tEzsignbulksendNote = tEzsignbulksendNote
        self.bEzsignbulksendIsactive = bEzsignbulksendIsactive
        self.objAudit = objAudit
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsignbulksendID
        case fkiEzsignfoldertypeID
        case fkiLanguageID
        case sEzsignbulksendDescription
        case tEzsignbulksendNote
        case bEzsignbulksendIsactive
        case objAudit
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiEzsignbulksendID, forKey: .pkiEzsignbulksendID)
        try container.encode(fkiEzsignfoldertypeID, forKey: .fkiEzsignfoldertypeID)
        try container.encode(fkiLanguageID, forKey: .fkiLanguageID)
        try container.encode(sEzsignbulksendDescription, forKey: .sEzsignbulksendDescription)
        try container.encode(tEzsignbulksendNote, forKey: .tEzsignbulksendNote)
        try container.encode(bEzsignbulksendIsactive, forKey: .bEzsignbulksendIsactive)
        try container.encode(objAudit, forKey: .objAudit)
    }
}

