//
// EzsignfoldersignerassociationRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An Ezsignfoldersignerassociation Object */
public struct EzsignfoldersignerassociationRequest: Codable, Hashable {

    /** A reference to a valid User.  This is only used if the signatory will be a user from the system. */
    public var fkiUserID: Int?
    /** A reference to a valid Ezsignfolder.  That value is returned after a successful Ezsignfolder Creation. */
    public var fkiEzsignfolderID: Int

    public init(fkiUserID: Int? = nil, fkiEzsignfolderID: Int) {
        self.fkiUserID = fkiUserID
        self.fkiEzsignfolderID = fkiEzsignfolderID
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case fkiUserID
        case fkiEzsignfolderID
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(fkiUserID, forKey: .fkiUserID)
        try container.encode(fkiEzsignfolderID, forKey: .fkiEzsignfolderID)
    }
}

