//
// CommonResponseErrorSTemporaryFileUrl.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Generic Error Message */
public struct CommonResponseErrorSTemporaryFileUrl: Codable, JSONEncodable, Hashable {

    static let sErrorMessageRule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,500}$/")
    /** The Temporary File Url of the document that was uploaded. That url can be reused instead of uploading the file again. */
    public var sTemporaryFileUrl: String?
    /** The message giving details about the error */
    public var sErrorMessage: String
    public var eErrorCode: FieldEErrorCode

    public init(sTemporaryFileUrl: String? = nil, sErrorMessage: String, eErrorCode: FieldEErrorCode) {
        self.sTemporaryFileUrl = sTemporaryFileUrl
        self.sErrorMessage = sErrorMessage
        self.eErrorCode = eErrorCode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sTemporaryFileUrl
        case sErrorMessage
        case eErrorCode
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sTemporaryFileUrl, forKey: .sTemporaryFileUrl)
        try container.encode(sErrorMessage, forKey: .sErrorMessage)
        try container.encode(eErrorCode, forKey: .eErrorCode)
    }
}

