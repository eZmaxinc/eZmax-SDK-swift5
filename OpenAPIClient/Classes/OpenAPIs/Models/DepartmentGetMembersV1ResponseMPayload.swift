//
// DepartmentGetMembersV1ResponseMPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Payload for GET /1/object/department/{pkiDepartmentID}/getMembers */
public struct DepartmentGetMembersV1ResponseMPayload: Codable, JSONEncodable, Hashable {

    public var aFkiAgentID: [Int]?
    public var aFkiBrokerID: [Int]?
    public var aFkiCustomerID: [Int]?
    public var aFkiEmployeeID: [Int]?

    public init(aFkiAgentID: [Int]? = nil, aFkiBrokerID: [Int]? = nil, aFkiCustomerID: [Int]? = nil, aFkiEmployeeID: [Int]? = nil) {
        self.aFkiAgentID = aFkiAgentID
        self.aFkiBrokerID = aFkiBrokerID
        self.aFkiCustomerID = aFkiCustomerID
        self.aFkiEmployeeID = aFkiEmployeeID
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case aFkiAgentID = "a_fkiAgentID"
        case aFkiBrokerID = "a_fkiBrokerID"
        case aFkiCustomerID = "a_fkiCustomerID"
        case aFkiEmployeeID = "a_fkiEmployeeID"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(aFkiAgentID, forKey: .aFkiAgentID)
        try container.encodeIfPresent(aFkiBrokerID, forKey: .aFkiBrokerID)
        try container.encodeIfPresent(aFkiCustomerID, forKey: .aFkiCustomerID)
        try container.encodeIfPresent(aFkiEmployeeID, forKey: .aFkiEmployeeID)
    }
}

