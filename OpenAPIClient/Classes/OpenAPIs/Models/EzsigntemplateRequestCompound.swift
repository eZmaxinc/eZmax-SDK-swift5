//
// EzsigntemplateRequestCompound.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** A Ezsigntemplate Object and children */
public struct EzsigntemplateRequestCompound: Codable, JSONEncodable, Hashable {

    /** The unique ID of the Ezsigntemplate */
    public var pkiEzsigntemplateID: Int?
    /** The unique ID of the Ezsignfoldertype. */
    public var fkiEzsignfoldertypeID: Int
    /** The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English| */
    public var fkiLanguageID: Int
    /** The description of the Ezsigntemplate */
    public var sEzsigntemplateDescription: String
    /** Whether the Ezsigntemplate can be accessed by admin users only (eUserType=Normal) */
    public var bEzsigntemplateAdminonly: Bool

    public init(pkiEzsigntemplateID: Int? = nil, fkiEzsignfoldertypeID: Int, fkiLanguageID: Int, sEzsigntemplateDescription: String, bEzsigntemplateAdminonly: Bool) {
        self.pkiEzsigntemplateID = pkiEzsigntemplateID
        self.fkiEzsignfoldertypeID = fkiEzsignfoldertypeID
        self.fkiLanguageID = fkiLanguageID
        self.sEzsigntemplateDescription = sEzsigntemplateDescription
        self.bEzsigntemplateAdminonly = bEzsigntemplateAdminonly
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsigntemplateID
        case fkiEzsignfoldertypeID
        case fkiLanguageID
        case sEzsigntemplateDescription
        case bEzsigntemplateAdminonly
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(pkiEzsigntemplateID, forKey: .pkiEzsigntemplateID)
        try container.encode(fkiEzsignfoldertypeID, forKey: .fkiEzsignfoldertypeID)
        try container.encode(fkiLanguageID, forKey: .fkiLanguageID)
        try container.encode(sEzsigntemplateDescription, forKey: .sEzsigntemplateDescription)
        try container.encode(bEzsigntemplateAdminonly, forKey: .bEzsigntemplateAdminonly)
    }
}

