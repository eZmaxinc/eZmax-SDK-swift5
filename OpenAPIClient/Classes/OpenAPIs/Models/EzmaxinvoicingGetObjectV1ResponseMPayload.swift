//
// EzmaxinvoicingGetObjectV1ResponseMPayload.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Payload for GET /1/object/ezmaxinvoicing/{pkiEzmaxinvoicingID} */
public struct EzmaxinvoicingGetObjectV1ResponseMPayload: Codable, JSONEncodable, Hashable {

    /** The unique ID of the Ezmaxinvoicing */
    public var pkiEzmaxinvoicingID: Int?
    /** The unique ID of the Ezmaxinvoicingcontract */
    public var fkiEzmaxinvoicingcontractID: Int
    /** The unique ID of the Ezmaxpricing */
    public var fkiEzmaxpricingID: Int
    /** The unique ID of the Systemconfigurationtype */
    public var fkiSystemconfigurationtypeID: Int
    /** The description of the Systemconfigurationtype in the language of the requester */
    public var sSystemconfigurationtypeDescriptionX: String
    /** The YYYYMM period of the Ezmaxinvoicing */
    public var yyyymmEzmaxinvoicing: String
    /** The number of days invoiced */
    public var iEzmaxinvoicingDays: Int
    public var eEzmaxinvoicingPaymenttype: FieldEEzmaxinvoicingPaymenttype
    /** The percentage of rebate depending of the payment type */
    public var dEzmaxinvoicingRebatepaymenttype: String
    /** The length of the contract in years */
    public var iEzmaxinvoicingContractlength: Int
    /** The percentage of rebate depending of the contract length */
    public var dEzmaxinvoicingRebatecontractlength: String
    /** Whether the rebate for eZsign is for all agents */
    public var bEzmaxinvoicingRebateEzsignallagents: Bool
    public var objAudit: CommonAudit?
    public var objEzmaxinvoicingcontract: EzmaxinvoicingcontractResponseCompound
    public var objEzmaxpricing: CustomEzmaxpricingResponse
    public var aObjEzmaxinvoicingsummaryglobal: [EzmaxinvoicingsummaryglobalResponseCompound]
    public var aObjEzmaxinvoicingsummaryexternal: [EzmaxinvoicingsummaryexternalResponseCompound]
    public var aObjEzmaxinvoicingsummaryinternal: [EzmaxinvoicingsummaryinternalResponseCompound]
    public var aObjEzmaxinvoicingagent: [EzmaxinvoicingagentResponseCompound]
    public var aObjEzmaxinvoicinguser: [EzmaxinvoicinguserResponseCompound]
    public var aObjEzmaxinvoicingezsignfolder: [CustomEzmaxinvoicingEzsignfolderResponse]
    public var aObjEzmaxinvoicingezsigndocument: [CustomEzmaxinvoicingEzsigndocumentResponse]

    public init(pkiEzmaxinvoicingID: Int? = nil, fkiEzmaxinvoicingcontractID: Int, fkiEzmaxpricingID: Int, fkiSystemconfigurationtypeID: Int, sSystemconfigurationtypeDescriptionX: String, yyyymmEzmaxinvoicing: String, iEzmaxinvoicingDays: Int, eEzmaxinvoicingPaymenttype: FieldEEzmaxinvoicingPaymenttype, dEzmaxinvoicingRebatepaymenttype: String, iEzmaxinvoicingContractlength: Int, dEzmaxinvoicingRebatecontractlength: String, bEzmaxinvoicingRebateEzsignallagents: Bool, objAudit: CommonAudit? = nil, objEzmaxinvoicingcontract: EzmaxinvoicingcontractResponseCompound, objEzmaxpricing: CustomEzmaxpricingResponse, aObjEzmaxinvoicingsummaryglobal: [EzmaxinvoicingsummaryglobalResponseCompound], aObjEzmaxinvoicingsummaryexternal: [EzmaxinvoicingsummaryexternalResponseCompound], aObjEzmaxinvoicingsummaryinternal: [EzmaxinvoicingsummaryinternalResponseCompound], aObjEzmaxinvoicingagent: [EzmaxinvoicingagentResponseCompound], aObjEzmaxinvoicinguser: [EzmaxinvoicinguserResponseCompound], aObjEzmaxinvoicingezsignfolder: [CustomEzmaxinvoicingEzsignfolderResponse], aObjEzmaxinvoicingezsigndocument: [CustomEzmaxinvoicingEzsigndocumentResponse]) {
        self.pkiEzmaxinvoicingID = pkiEzmaxinvoicingID
        self.fkiEzmaxinvoicingcontractID = fkiEzmaxinvoicingcontractID
        self.fkiEzmaxpricingID = fkiEzmaxpricingID
        self.fkiSystemconfigurationtypeID = fkiSystemconfigurationtypeID
        self.sSystemconfigurationtypeDescriptionX = sSystemconfigurationtypeDescriptionX
        self.yyyymmEzmaxinvoicing = yyyymmEzmaxinvoicing
        self.iEzmaxinvoicingDays = iEzmaxinvoicingDays
        self.eEzmaxinvoicingPaymenttype = eEzmaxinvoicingPaymenttype
        self.dEzmaxinvoicingRebatepaymenttype = dEzmaxinvoicingRebatepaymenttype
        self.iEzmaxinvoicingContractlength = iEzmaxinvoicingContractlength
        self.dEzmaxinvoicingRebatecontractlength = dEzmaxinvoicingRebatecontractlength
        self.bEzmaxinvoicingRebateEzsignallagents = bEzmaxinvoicingRebateEzsignallagents
        self.objAudit = objAudit
        self.objEzmaxinvoicingcontract = objEzmaxinvoicingcontract
        self.objEzmaxpricing = objEzmaxpricing
        self.aObjEzmaxinvoicingsummaryglobal = aObjEzmaxinvoicingsummaryglobal
        self.aObjEzmaxinvoicingsummaryexternal = aObjEzmaxinvoicingsummaryexternal
        self.aObjEzmaxinvoicingsummaryinternal = aObjEzmaxinvoicingsummaryinternal
        self.aObjEzmaxinvoicingagent = aObjEzmaxinvoicingagent
        self.aObjEzmaxinvoicinguser = aObjEzmaxinvoicinguser
        self.aObjEzmaxinvoicingezsignfolder = aObjEzmaxinvoicingezsignfolder
        self.aObjEzmaxinvoicingezsigndocument = aObjEzmaxinvoicingezsigndocument
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzmaxinvoicingID
        case fkiEzmaxinvoicingcontractID
        case fkiEzmaxpricingID
        case fkiSystemconfigurationtypeID
        case sSystemconfigurationtypeDescriptionX
        case yyyymmEzmaxinvoicing
        case iEzmaxinvoicingDays
        case eEzmaxinvoicingPaymenttype
        case dEzmaxinvoicingRebatepaymenttype
        case iEzmaxinvoicingContractlength
        case dEzmaxinvoicingRebatecontractlength
        case bEzmaxinvoicingRebateEzsignallagents
        case objAudit
        case objEzmaxinvoicingcontract
        case objEzmaxpricing
        case aObjEzmaxinvoicingsummaryglobal = "a_objEzmaxinvoicingsummaryglobal"
        case aObjEzmaxinvoicingsummaryexternal = "a_objEzmaxinvoicingsummaryexternal"
        case aObjEzmaxinvoicingsummaryinternal = "a_objEzmaxinvoicingsummaryinternal"
        case aObjEzmaxinvoicingagent = "a_objEzmaxinvoicingagent"
        case aObjEzmaxinvoicinguser = "a_objEzmaxinvoicinguser"
        case aObjEzmaxinvoicingezsignfolder = "a_objEzmaxinvoicingezsignfolder"
        case aObjEzmaxinvoicingezsigndocument = "a_objEzmaxinvoicingezsigndocument"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(pkiEzmaxinvoicingID, forKey: .pkiEzmaxinvoicingID)
        try container.encode(fkiEzmaxinvoicingcontractID, forKey: .fkiEzmaxinvoicingcontractID)
        try container.encode(fkiEzmaxpricingID, forKey: .fkiEzmaxpricingID)
        try container.encode(fkiSystemconfigurationtypeID, forKey: .fkiSystemconfigurationtypeID)
        try container.encode(sSystemconfigurationtypeDescriptionX, forKey: .sSystemconfigurationtypeDescriptionX)
        try container.encode(yyyymmEzmaxinvoicing, forKey: .yyyymmEzmaxinvoicing)
        try container.encode(iEzmaxinvoicingDays, forKey: .iEzmaxinvoicingDays)
        try container.encode(eEzmaxinvoicingPaymenttype, forKey: .eEzmaxinvoicingPaymenttype)
        try container.encode(dEzmaxinvoicingRebatepaymenttype, forKey: .dEzmaxinvoicingRebatepaymenttype)
        try container.encode(iEzmaxinvoicingContractlength, forKey: .iEzmaxinvoicingContractlength)
        try container.encode(dEzmaxinvoicingRebatecontractlength, forKey: .dEzmaxinvoicingRebatecontractlength)
        try container.encode(bEzmaxinvoicingRebateEzsignallagents, forKey: .bEzmaxinvoicingRebateEzsignallagents)
        try container.encodeIfPresent(objAudit, forKey: .objAudit)
        try container.encode(objEzmaxinvoicingcontract, forKey: .objEzmaxinvoicingcontract)
        try container.encode(objEzmaxpricing, forKey: .objEzmaxpricing)
        try container.encode(aObjEzmaxinvoicingsummaryglobal, forKey: .aObjEzmaxinvoicingsummaryglobal)
        try container.encode(aObjEzmaxinvoicingsummaryexternal, forKey: .aObjEzmaxinvoicingsummaryexternal)
        try container.encode(aObjEzmaxinvoicingsummaryinternal, forKey: .aObjEzmaxinvoicingsummaryinternal)
        try container.encode(aObjEzmaxinvoicingagent, forKey: .aObjEzmaxinvoicingagent)
        try container.encode(aObjEzmaxinvoicinguser, forKey: .aObjEzmaxinvoicinguser)
        try container.encode(aObjEzmaxinvoicingezsignfolder, forKey: .aObjEzmaxinvoicingezsignfolder)
        try container.encode(aObjEzmaxinvoicingezsigndocument, forKey: .aObjEzmaxinvoicingezsigndocument)
    }
}

