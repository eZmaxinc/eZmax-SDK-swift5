//
// CommonFile.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Object representing a file used in a request or response context  */
public struct CommonFile: Codable, JSONEncodable, Hashable {

    public enum EFileSource: String, Codable, CaseIterable {
        case base64 = "Base64"
        case url = "Url"
    }
    /** The name of the file */
    public var sFileName: String
    /** The URL used to reach the File */
    public var sFileUrl: String?
    /** The Base64 encoded binary content of the File */
    public var sFileBase64: Data?
    /** The source of the File */
    public var eFileSource: EFileSource

    public init(sFileName: String, sFileUrl: String? = nil, sFileBase64: Data? = nil, eFileSource: EFileSource) {
        self.sFileName = sFileName
        self.sFileUrl = sFileUrl
        self.sFileBase64 = sFileBase64
        self.eFileSource = eFileSource
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sFileName
        case sFileUrl
        case sFileBase64
        case eFileSource
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(sFileName, forKey: .sFileName)
        try container.encodeIfPresent(sFileUrl, forKey: .sFileUrl)
        try container.encodeIfPresent(sFileBase64, forKey: .sFileBase64)
        try container.encode(eFileSource, forKey: .eFileSource)
    }
}

