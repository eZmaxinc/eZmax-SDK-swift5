//
// MultilingualUsergroupName.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** The name of the Usergroup */
public struct MultilingualUsergroupName: Codable, JSONEncodable, Hashable {

    static let sUsergroupName1Rule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,50}$/")
    static let sUsergroupName2Rule = StringRule(minLength: nil, maxLength: nil, pattern: "/^.{0,50}$/")
    /** The name of the Usergroup in French */
    public var sUsergroupName1: String?
    /** The name of the Usergroup in English */
    public var sUsergroupName2: String?

    public init(sUsergroupName1: String? = nil, sUsergroupName2: String? = nil) {
        self.sUsergroupName1 = sUsergroupName1
        self.sUsergroupName2 = sUsergroupName2
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case sUsergroupName1
        case sUsergroupName2
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(sUsergroupName1, forKey: .sUsergroupName1)
        try container.encodeIfPresent(sUsergroupName2, forKey: .sUsergroupName2)
    }
}

