//
// EzsignsignergroupResponseCompound.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An Ezsignsignergroup Object */
public struct EzsignsignergroupResponseCompound: Codable, JSONEncodable, Hashable {

    static let pkiEzsignsignergroupIDRule = NumericRule<Int>(minimum: 0, exclusiveMinimum: false, maximum: 65535, exclusiveMaximum: false, multipleOf: nil)
    /** The unique ID of the Ezsignsignergroup */
    public var pkiEzsignsignergroupID: Int

    public init(pkiEzsignsignergroupID: Int) {
        self.pkiEzsignsignergroupID = pkiEzsignsignergroupID
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsignsignergroupID
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiEzsignsignergroupID, forKey: .pkiEzsignsignergroupID)
    }
}

