//
// CustomEzsignfoldertransmissionResponse.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** An Ezsignfolder Object in the context of an Ezsignbulksendtransmission */
public struct CustomEzsignfoldertransmissionResponse: Codable, JSONEncodable, Hashable {

    /** The unique ID of the Ezsignfolder */
    public var pkiEzsignfolderID: Int
    public var eEzsignfolderStep: FieldEEzsignfolderStep
    /** The number of total signatures that were requested in the Ezsignfolder */
    public var iEzsignfolderSignaturetotal: Int
    /** The number of signatures that were signed in the Ezsignfolder. */
    public var iEzsignfolderSignaturesigned: Int
    public var aObjEzsignfoldertransmissionSigner: [CustomEzsignfoldertransmissionSignerResponse]

    public init(pkiEzsignfolderID: Int, eEzsignfolderStep: FieldEEzsignfolderStep, iEzsignfolderSignaturetotal: Int, iEzsignfolderSignaturesigned: Int, aObjEzsignfoldertransmissionSigner: [CustomEzsignfoldertransmissionSignerResponse]) {
        self.pkiEzsignfolderID = pkiEzsignfolderID
        self.eEzsignfolderStep = eEzsignfolderStep
        self.iEzsignfolderSignaturetotal = iEzsignfolderSignaturetotal
        self.iEzsignfolderSignaturesigned = iEzsignfolderSignaturesigned
        self.aObjEzsignfoldertransmissionSigner = aObjEzsignfoldertransmissionSigner
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case pkiEzsignfolderID
        case eEzsignfolderStep
        case iEzsignfolderSignaturetotal
        case iEzsignfolderSignaturesigned
        case aObjEzsignfoldertransmissionSigner = "a_objEzsignfoldertransmissionSigner"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(pkiEzsignfolderID, forKey: .pkiEzsignfolderID)
        try container.encode(eEzsignfolderStep, forKey: .eEzsignfolderStep)
        try container.encode(iEzsignfolderSignaturetotal, forKey: .iEzsignfolderSignaturetotal)
        try container.encode(iEzsignfolderSignaturesigned, forKey: .iEzsignfolderSignaturesigned)
        try container.encode(aObjEzsignfoldertransmissionSigner, forKey: .aObjEzsignfoldertransmissionSigner)
    }
}

