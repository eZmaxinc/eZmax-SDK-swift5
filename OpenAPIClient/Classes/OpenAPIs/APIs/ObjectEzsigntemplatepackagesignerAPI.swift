//
// ObjectEzsigntemplatepackagesignerAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ObjectEzsigntemplatepackagesignerAPI {

    /**
     Create a new Ezsigntemplatepackagesigner
     
     - parameter ezsigntemplatepackagesignerCreateObjectV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ezsigntemplatepackagesignerCreateObjectV1(ezsigntemplatepackagesignerCreateObjectV1Request: EzsigntemplatepackagesignerCreateObjectV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EzsigntemplatepackagesignerCreateObjectV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return ezsigntemplatepackagesignerCreateObjectV1WithRequestBuilder(ezsigntemplatepackagesignerCreateObjectV1Request: ezsigntemplatepackagesignerCreateObjectV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create a new Ezsigntemplatepackagesigner
     - POST /1/object/ezsigntemplatepackagesigner
     - The endpoint allows to create one or many elements at once.
     - API Key:
       - type: apiKey Authorization 
       - name: Authorization
     - parameter ezsigntemplatepackagesignerCreateObjectV1Request: (body)  
     - returns: RequestBuilder<EzsigntemplatepackagesignerCreateObjectV1Response> 
     */
    open class func ezsigntemplatepackagesignerCreateObjectV1WithRequestBuilder(ezsigntemplatepackagesignerCreateObjectV1Request: EzsigntemplatepackagesignerCreateObjectV1Request) -> RequestBuilder<EzsigntemplatepackagesignerCreateObjectV1Response> {
        let localVariablePath = "/1/object/ezsigntemplatepackagesigner"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: ezsigntemplatepackagesignerCreateObjectV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EzsigntemplatepackagesignerCreateObjectV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Delete an existing Ezsigntemplatepackagesigner
     
     - parameter pkiEzsigntemplatepackagesignerID: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ezsigntemplatepackagesignerDeleteObjectV1(pkiEzsigntemplatepackagesignerID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EzsigntemplatepackagesignerDeleteObjectV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return ezsigntemplatepackagesignerDeleteObjectV1WithRequestBuilder(pkiEzsigntemplatepackagesignerID: pkiEzsigntemplatepackagesignerID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete an existing Ezsigntemplatepackagesigner
     - DELETE /1/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}
     - 
     - API Key:
       - type: apiKey Authorization 
       - name: Authorization
     - parameter pkiEzsigntemplatepackagesignerID: (path)  
     - returns: RequestBuilder<EzsigntemplatepackagesignerDeleteObjectV1Response> 
     */
    open class func ezsigntemplatepackagesignerDeleteObjectV1WithRequestBuilder(pkiEzsigntemplatepackagesignerID: Int) -> RequestBuilder<EzsigntemplatepackagesignerDeleteObjectV1Response> {
        var localVariablePath = "/1/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}"
        let pkiEzsigntemplatepackagesignerIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiEzsigntemplatepackagesignerID))"
        let pkiEzsigntemplatepackagesignerIDPostEscape = pkiEzsigntemplatepackagesignerIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiEzsigntemplatepackagesignerID}", with: pkiEzsigntemplatepackagesignerIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EzsigntemplatepackagesignerDeleteObjectV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Edit an existing Ezsigntemplatepackagesigner
     
     - parameter pkiEzsigntemplatepackagesignerID: (path)  
     - parameter ezsigntemplatepackagesignerEditObjectV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ezsigntemplatepackagesignerEditObjectV1(pkiEzsigntemplatepackagesignerID: Int, ezsigntemplatepackagesignerEditObjectV1Request: EzsigntemplatepackagesignerEditObjectV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EzsigntemplatepackagesignerEditObjectV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return ezsigntemplatepackagesignerEditObjectV1WithRequestBuilder(pkiEzsigntemplatepackagesignerID: pkiEzsigntemplatepackagesignerID, ezsigntemplatepackagesignerEditObjectV1Request: ezsigntemplatepackagesignerEditObjectV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Edit an existing Ezsigntemplatepackagesigner
     - PUT /1/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}
     - 
     - API Key:
       - type: apiKey Authorization 
       - name: Authorization
     - parameter pkiEzsigntemplatepackagesignerID: (path)  
     - parameter ezsigntemplatepackagesignerEditObjectV1Request: (body)  
     - returns: RequestBuilder<EzsigntemplatepackagesignerEditObjectV1Response> 
     */
    open class func ezsigntemplatepackagesignerEditObjectV1WithRequestBuilder(pkiEzsigntemplatepackagesignerID: Int, ezsigntemplatepackagesignerEditObjectV1Request: EzsigntemplatepackagesignerEditObjectV1Request) -> RequestBuilder<EzsigntemplatepackagesignerEditObjectV1Response> {
        var localVariablePath = "/1/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}"
        let pkiEzsigntemplatepackagesignerIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiEzsigntemplatepackagesignerID))"
        let pkiEzsigntemplatepackagesignerIDPostEscape = pkiEzsigntemplatepackagesignerIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiEzsigntemplatepackagesignerID}", with: pkiEzsigntemplatepackagesignerIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: ezsigntemplatepackagesignerEditObjectV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EzsigntemplatepackagesignerEditObjectV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PUT", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Retrieve an existing Ezsigntemplatepackagesigner
     
     - parameter pkiEzsigntemplatepackagesignerID: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    @discardableResult
    open class func ezsigntemplatepackagesignerGetObjectV1(pkiEzsigntemplatepackagesignerID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EzsigntemplatepackagesignerGetObjectV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return ezsigntemplatepackagesignerGetObjectV1WithRequestBuilder(pkiEzsigntemplatepackagesignerID: pkiEzsigntemplatepackagesignerID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve an existing Ezsigntemplatepackagesigner
     - GET /1/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}
     - 
     - API Key:
       - type: apiKey Authorization 
       - name: Authorization
     - parameter pkiEzsigntemplatepackagesignerID: (path)  
     - returns: RequestBuilder<EzsigntemplatepackagesignerGetObjectV1Response> 
     */
    @available(*, deprecated, message: "This operation is deprecated.")
    open class func ezsigntemplatepackagesignerGetObjectV1WithRequestBuilder(pkiEzsigntemplatepackagesignerID: Int) -> RequestBuilder<EzsigntemplatepackagesignerGetObjectV1Response> {
        var localVariablePath = "/1/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}"
        let pkiEzsigntemplatepackagesignerIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiEzsigntemplatepackagesignerID))"
        let pkiEzsigntemplatepackagesignerIDPostEscape = pkiEzsigntemplatepackagesignerIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiEzsigntemplatepackagesignerID}", with: pkiEzsigntemplatepackagesignerIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EzsigntemplatepackagesignerGetObjectV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }

    /**
     Retrieve an existing Ezsigntemplatepackagesigner
     
     - parameter pkiEzsigntemplatepackagesignerID: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func ezsigntemplatepackagesignerGetObjectV2(pkiEzsigntemplatepackagesignerID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: EzsigntemplatepackagesignerGetObjectV2Response?, _ error: Error?) -> Void)) -> RequestTask {
        return ezsigntemplatepackagesignerGetObjectV2WithRequestBuilder(pkiEzsigntemplatepackagesignerID: pkiEzsigntemplatepackagesignerID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve an existing Ezsigntemplatepackagesigner
     - GET /2/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}
     - 
     - API Key:
       - type: apiKey Authorization 
       - name: Authorization
     - parameter pkiEzsigntemplatepackagesignerID: (path)  
     - returns: RequestBuilder<EzsigntemplatepackagesignerGetObjectV2Response> 
     */
    open class func ezsigntemplatepackagesignerGetObjectV2WithRequestBuilder(pkiEzsigntemplatepackagesignerID: Int) -> RequestBuilder<EzsigntemplatepackagesignerGetObjectV2Response> {
        var localVariablePath = "/2/object/ezsigntemplatepackagesigner/{pkiEzsigntemplatepackagesignerID}"
        let pkiEzsigntemplatepackagesignerIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiEzsigntemplatepackagesignerID))"
        let pkiEzsigntemplatepackagesignerIDPostEscape = pkiEzsigntemplatepackagesignerIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiEzsigntemplatepackagesignerID}", with: pkiEzsigntemplatepackagesignerIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<EzsigntemplatepackagesignerGetObjectV2Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
