//
// ObjectUserstagedAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class ObjectUserstagedAPI {

    /**
     Create a User from a Userstaged and then map it
     
     - parameter pkiUserstagedID: (path)  
     - parameter body: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func userstagedCreateUserV1(pkiUserstagedID: Int, body: AnyCodable, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UserstagedCreateUserV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return userstagedCreateUserV1WithRequestBuilder(pkiUserstagedID: pkiUserstagedID, body: body).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Create a User from a Userstaged and then map it
     - POST /1/object/userstaged/{pkiUserstagedID}/createUser
     - Default values will be used while creating the User. If you need to change those values, you should use the route to edit a User.
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiUserstagedID: (path)  
     - parameter body: (body)  
     - returns: RequestBuilder<UserstagedCreateUserV1Response> 
     */
    open class func userstagedCreateUserV1WithRequestBuilder(pkiUserstagedID: Int, body: AnyCodable) -> RequestBuilder<UserstagedCreateUserV1Response> {
        var localVariablePath = "/1/object/userstaged/{pkiUserstagedID}/createUser"
        let pkiUserstagedIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiUserstagedID))"
        let pkiUserstagedIDPostEscape = pkiUserstagedIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiUserstagedID}", with: pkiUserstagedIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: body)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserstagedCreateUserV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Delete an existing Userstaged
     
     - parameter pkiUserstagedID: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func userstagedDeleteObjectV1(pkiUserstagedID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UserstagedDeleteObjectV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return userstagedDeleteObjectV1WithRequestBuilder(pkiUserstagedID: pkiUserstagedID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Delete an existing Userstaged
     - DELETE /1/object/userstaged/{pkiUserstagedID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiUserstagedID: (path)  
     - returns: RequestBuilder<UserstagedDeleteObjectV1Response> 
     */
    open class func userstagedDeleteObjectV1WithRequestBuilder(pkiUserstagedID: Int) -> RequestBuilder<UserstagedDeleteObjectV1Response> {
        var localVariablePath = "/1/object/userstaged/{pkiUserstagedID}"
        let pkiUserstagedIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiUserstagedID))"
        let pkiUserstagedIDPostEscape = pkiUserstagedIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiUserstagedID}", with: pkiUserstagedIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserstagedDeleteObjectV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "DELETE", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter eOrderBy
     */
    public enum EOrderBy_userstagedGetListV1: String, CaseIterable {
        case pkiuserstagedidAsc = "pkiUserstagedID_ASC"
        case pkiuserstagedidDesc = "pkiUserstagedID_DESC"
        case semailaddressAsc = "sEmailAddress_ASC"
        case semailaddressDesc = "sEmailAddress_DESC"
        case suserstagedfirstnameAsc = "sUserstagedFirstname_ASC"
        case suserstagedfirstnameDesc = "sUserstagedFirstname_DESC"
        case suserstagedlastnameAsc = "sUserstagedLastname_ASC"
        case suserstagedlastnameDesc = "sUserstagedLastname_DESC"
        case suserstagedexternalidAsc = "sUserstagedExternalid_ASC"
        case suserstagedexternalidDesc = "sUserstagedExternalid_DESC"
    }

    /**
     Retrieve Userstaged list
     
     - parameter eOrderBy: (query) Specify how you want the results to be sorted (optional)
     - parameter iRowMax: (query)  (optional, default to 10000)
     - parameter iRowOffset: (query)  (optional, default to 0)
     - parameter acceptLanguage: (header)  (optional)
     - parameter sFilter: (query)  (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func userstagedGetListV1(eOrderBy: EOrderBy_userstagedGetListV1? = nil, iRowMax: Int? = nil, iRowOffset: Int? = nil, acceptLanguage: HeaderAcceptLanguage? = nil, sFilter: String? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UserstagedGetListV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return userstagedGetListV1WithRequestBuilder(eOrderBy: eOrderBy, iRowMax: iRowMax, iRowOffset: iRowOffset, acceptLanguage: acceptLanguage, sFilter: sFilter).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve Userstaged list
     - GET /1/object/userstaged/getList
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter eOrderBy: (query) Specify how you want the results to be sorted (optional)
     - parameter iRowMax: (query)  (optional, default to 10000)
     - parameter iRowOffset: (query)  (optional, default to 0)
     - parameter acceptLanguage: (header)  (optional)
     - parameter sFilter: (query)  (optional)
     - returns: RequestBuilder<UserstagedGetListV1Response> 
     */
    open class func userstagedGetListV1WithRequestBuilder(eOrderBy: EOrderBy_userstagedGetListV1? = nil, iRowMax: Int? = nil, iRowOffset: Int? = nil, acceptLanguage: HeaderAcceptLanguage? = nil, sFilter: String? = nil) -> RequestBuilder<UserstagedGetListV1Response> {
        let localVariablePath = "/1/object/userstaged/getList"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "eOrderBy": (wrappedValue: eOrderBy?.encodeToJSON(), isExplode: true),
            "iRowMax": (wrappedValue: iRowMax?.encodeToJSON(), isExplode: true),
            "iRowOffset": (wrappedValue: iRowOffset?.encodeToJSON(), isExplode: true),
            "sFilter": (wrappedValue: sFilter?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Accept-Language": acceptLanguage?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserstagedGetListV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Retrieve an existing Userstaged
     
     - parameter pkiUserstagedID: (path)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func userstagedGetObjectV2(pkiUserstagedID: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UserstagedGetObjectV2Response?, _ error: Error?) -> Void)) -> RequestTask {
        return userstagedGetObjectV2WithRequestBuilder(pkiUserstagedID: pkiUserstagedID).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Retrieve an existing Userstaged
     - GET /2/object/userstaged/{pkiUserstagedID}
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiUserstagedID: (path)  
     - returns: RequestBuilder<UserstagedGetObjectV2Response> 
     */
    open class func userstagedGetObjectV2WithRequestBuilder(pkiUserstagedID: Int) -> RequestBuilder<UserstagedGetObjectV2Response> {
        var localVariablePath = "/2/object/userstaged/{pkiUserstagedID}"
        let pkiUserstagedIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiUserstagedID))"
        let pkiUserstagedIDPostEscape = pkiUserstagedIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiUserstagedID}", with: pkiUserstagedIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserstagedGetObjectV2Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     Map the Userstaged to an existing user
     
     - parameter pkiUserstagedID: (path)  
     - parameter userstagedMapV1Request: (body)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func userstagedMapV1(pkiUserstagedID: Int, userstagedMapV1Request: UserstagedMapV1Request, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: UserstagedMapV1Response?, _ error: Error?) -> Void)) -> RequestTask {
        return userstagedMapV1WithRequestBuilder(pkiUserstagedID: pkiUserstagedID, userstagedMapV1Request: userstagedMapV1Request).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Map the Userstaged to an existing user
     - POST /1/object/userstaged/{pkiUserstagedID}/map
     - 
     - API Key:
       - type: apiKey Authorization (HEADER)
       - name: Authorization
     - parameter pkiUserstagedID: (path)  
     - parameter userstagedMapV1Request: (body)  
     - returns: RequestBuilder<UserstagedMapV1Response> 
     */
    open class func userstagedMapV1WithRequestBuilder(pkiUserstagedID: Int, userstagedMapV1Request: UserstagedMapV1Request) -> RequestBuilder<UserstagedMapV1Response> {
        var localVariablePath = "/1/object/userstaged/{pkiUserstagedID}/map"
        let pkiUserstagedIDPreEscape = "\(APIHelper.mapValueToPathItem(pkiUserstagedID))"
        let pkiUserstagedIDPostEscape = pkiUserstagedIDPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{pkiUserstagedID}", with: pkiUserstagedIDPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: userstagedMapV1Request)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<UserstagedMapV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
