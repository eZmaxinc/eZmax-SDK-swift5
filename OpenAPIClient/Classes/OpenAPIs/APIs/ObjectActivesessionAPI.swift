//
// ObjectActivesessionAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class ObjectActivesessionAPI {
    /**
     Get Current Activesession
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func activesessionGetCurrentV1(apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: ActivesessionGetCurrentV1Response?, _ error: Error?) -> Void)) {
        activesessionGetCurrentV1WithRequestBuilder().execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get Current Activesession
     - GET /1/object/activesession/getCurrent
     - Retrieve the details about the current activesession
     - API Key:
       - type: apiKey Authorization 
       - name: Authorization
     - returns: RequestBuilder<ActivesessionGetCurrentV1Response> 
     */
    open class func activesessionGetCurrentV1WithRequestBuilder() -> RequestBuilder<ActivesessionGetCurrentV1Response> {
        let path = "/1/object/activesession/getCurrent"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String: Any]? = nil

        let urlComponents = URLComponents(string: URLString)

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<ActivesessionGetCurrentV1Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (urlComponents?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
